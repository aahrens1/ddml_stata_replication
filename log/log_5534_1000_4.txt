
. 
. which ddml
/cluster/home/kahrens/ado/plus/d/ddml.ado
*! ddml v1.4.3
*! last edited: 17aug2023
*! authors: aa/ms

. which pystacked
/cluster/home/kahrens/ado/plus/p/pystacked.ado
*! pystacked v0.7.5
*! last edited: 7aug2023
*! authors: aa/ms

. 
. cap set seed `1'

. di "`1' `2' `3' `4' `5'"
5534 1000 4 5 

. 
. global reps = 10

. global each_reps = 10 

. 
. * options
. global pyopt njobs(4)  

. global rflow max_depth(10) max_features(sqrt) n_estimators(500)

. global rfmid max_depth(6) max_features(sqrt) n_estimators(500)

. global rfhigh max_depth(2) max_features(sqrt) n_estimators(500)

. global gradlow max_depth(3) n_estimators(1000) learning_rate(0.3) validation_
> fraction(0.2) n_iter_no_change(5) tol(0.01)

. global gradmid max_depth(3) n_estimators(1000) learning_rate(0.1) validation_
> fraction(0.2) n_iter_no_change(5) tol(0.01)

. global gradhigh max_depth(3) n_estimators(1000) learning_rate(0.01) validatio
> n_fraction(0.2) n_iter_no_change(5) tol(0.01)

. global nnetopt hidden_layer_sizes(20 20)

. 
. * program 
. cap program drop mysim

. program define mysim , rclass
  1. 
.         syntax [,       ///
>                                 obs(integer 500) ///
>                                 DGP0(integer 1) ///
>                                 beta(real 0.5) ///
>                                 NOEST ///
>                                 p(integer -1) ///
>                                 cy(real -1) ///
>                                 cd(real -1) ///
>                                 folds(integer 20) ///
>                         ]
  2.                                 
.         clear
  3.         set obs `obs'
  4.         mat Sigma = (1,0\0,1)
  5.         drawnorm e v, cov(Sigma)
  6.         
.         ** dimension of x
.         local p=50
  7.         if `dgp0'==6 {
  8.                 local dgp = 2
  9.                 local p = 13
 10.         }
 11.         else if `dgp0'==7 {
 12.                 local dgp = 4
 13.                 local p = 7
 14.         }
 15.         else {
 16.                 local dgp = `dgp0'
 17.         }
 18.         
.         * correlation matrix
.         mat Eps = J(`p',`p',.)
 19.         forvalues i = 1(1)`p' {
 20.                 forvalues j = `i'(1)`p' {
 21.                         mat Eps[`i',`j']=0.5^(abs(`i'-`j'))
 22.                         mat Eps[`j',`i']=0.5^(abs(`i'-`j'))
 23.                 }
 24.         }
 25.         drawnorm x1-x`p', cov(Eps)
 26. 
.         * select DGP
.         if (`dgp'==1) {
 27.                 gen double Xall = 0
 28.                 forvalues j = 1(1)`p' {
 29.                         replace Xall=Xall +(1/`j')^2*x`j'
 30.                 }
 31.                 if (`cy'<0) local cy = .515 //.342 
 32.                 if (`cd'<0) local cd = .827 //.543
 33.         }       
 34.         if (`dgp'==2) {
 35.                 gen double Xall = x1*x2 + x3^2 + x4*x5 + x6*x7 + x8*x9 + x
> 10 + x11^2 + x12*x13
 36.                 if (`cy'<0) local cy = .1633 //.11
 37.                 if (`cd'<0) local cd = .275 //.18
 38.         }
 39.         if (`dgp'==3) {
 40.                 gen double Xall = (x1>.3)*(x2>0)*(x3>(-1))  
 41.                 if (`cy'<0) local cy = 1.42 //.94
 42.                 if (`cd'<0) local cd = 2.29 //1.48
 43.         }
 44.         if (`dgp'==4) {
 45.                 gen double Xall = x1 + sqrt(abs(x2)) + sin(x3) + .3*x4*x5 
> + x6 + .3*x7^2
 46.                 if (`cy'<0) local cy = .335 //.22
 47.                 if (`cd'<0) local cd = .547  //.36
 48.         }       
 49.         if (`dgp'==5) {
 50.                 gen double Xall = 0
 51.                 forvalues j = 1(1)`p' {
 52.                         replace Xall=Xall+(.9)^(`j')*x`j'
 53.                 }
 54.                 if (`cy'<0) local cy = .189 //.125
 55.                 if (`cd'<0) local cd = .298 //.195
 56.         }       
 57.         
.         * heterosk.
.         gen double sigd=(1+`cd'*Xall)^2
 58.         sum sigd, meanonly
 59.         local sigd_m=r(mean)
 60.         replace sigd = sqrt(sigd/`sigd_m')
 61.         
.         gen D = `cd'*Xall + v*sigd
 62.         
.         gen double sigy=(1+`beta'*D+`cy'*Xall)^2
 63.         sum sigy, meanonly
 64.         local sigy_m=r(mean)
 65.         replace sigy = sqrt(sigy/`sigy_m')      
 66.         
.         gen Y = `beta'*D + `cy'*Xall + e*sigy
 67.         
.         reg Y Xall
 68.         local ry = e(r2)
 69.         reg D Xall
 70.         local rd = e(r2)
 71.         
.         reg Y D Xall, robust
 72.         local oracle_b = _b[D]
 73.         local oracle_se = _se[D]        
 74.         
.         drop v e Xall
 75. 
.         ** fold var
.         gen u = runiform() 
 76.         egen fid = cut(u), group(`folds')
 77.         
.         ** number of learners
.         local nlearners = 14
 78.         
.         ** 5th order poly
.         forvalues i =1(1)5 {
 79.                 forvalues j = 1(1)`p' {
 80.                         gen poly_x`j'_`i'=(x`j')^(`i')
 81.                 }
 82.         }
 83.         
.         if "`noest'"=="" { 
 84.                 
.                 *** ddml partial w/ stacking
.                 timer on 1
 85.                 ddml init partial, foldvar(fid) 
 86.                 ddml E[Y|X], l(Y0_py): pystacked Y x*       || ///
>                                                 m(ols) || ///
>                                                 m(lassocv) || ///
>                                                 m(ridgecv) || ///
>                                                 m(lassocv) xvars(poly*) || //
> /
>                                                 m(ridgecv) xvars(poly*) || //
> /
>                                                 m(lassocv) xvars(c.(x*)##c.(x
> *)) || ///
>                                                 m(ridgecv) xvars(c.(x*)##c.(x
> *)) || ///
>                                                 m(rf) opt($rflow) || ///
>                                                 m(rf) opt($rfmid) || ///
>                                                 m(rf) opt($rfhigh) || ///
>                                                 m(gradboost) opt($gradlow) ||
>  ///
>                                                 m(gradboost) opt($gradmid) ||
>  ///
>                                                 m(gradboost) opt($gradhigh) |
> | ///
>                                                 m(nnet) opt($nnetopt) , ///
>                                                 $pyopt  
 87.                 ddml E[D|X], l(D0_py): pystacked D x*       || ///
>                                                 m(ols) || ///
>                                                 m(lassocv) || ///
>                                                 m(ridgecv) || ///
>                                                 m(lassocv) xvars(poly*) || //
> /
>                                                 m(ridgecv) xvars(poly*) || //
> /
>                                                 m(lassocv) xvars(c.(x*)##c.(x
> *)) || ///
>                                                 m(ridgecv) xvars(c.(x*)##c.(x
> *)) || ///
>                                                 m(rf) opt($rflow) || ///
>                                                 m(rf) opt($rfmid) || ///
>                                                 m(rf) opt($rfhigh) || ///
>                                                 m(gradboost) opt($gradlow) ||
>  ///
>                                                 m(gradboost) opt($gradmid) ||
>  ///
>                                                 m(gradboost) opt($gradhigh) |
> | ///
>                                                 m(nnet) opt($nnetopt) , ///
>                                                 $pyopt  
 88.                 ddml crossfit , shortstack poolstack
 89.                 ddml estimate, robust
 90.                 timer off 1
 91.                                 
.                 foreach final in nnls1 singlebest {
 92.                                 
.                 ddml estimate, robust finalest(`final')
 93.         
.                         // regular stacking results
.                         ddml estimate, mname(m0) spec(st) replay  
 94.                         local ddml_st_`final'_b = _b[D]
 95.                         local ddml_st_`final'_se = _se[D]
 96.                         // shortstacking results
.                         ddml estimate, mname(m0) spec(ss) replay 
 97.                         local ddml_ss_`final'_b = _b[D]
 98.                         local ddml_ss_`final'_se = _se[D]       
 99.                         // poolstacking results
.                         ddml estimate, mname(m0) spec(ps) replay  
100.                         local ddml_ps_`final'_b = _b[D]
101.                         local ddml_ps_`final'_se = _se[D]       
102.                 
.                         tempname By Bd
103.                         // pystacked weights
.                         ddml extract, show(stweights)
104.                         mat `By'=r(Y0_py_w_mn)
105.                         mat `Bd'=r(D0_py_w_mn)
106.                         mat list `Bd'
107.                         mat list `By'
108.                         forvalues i = 1(1)`nlearners' {
109.                                 local stw_`final'_d`i' = el(`Bd',`i',2)
110.                                 local stw_`final'_y`i' = el(`By',`i',2)
111.                         }
112.                         // shortstacked weights
.                         ddml extract, show(ssweights)
113.                         mat `By'=r(Y_Y_ss)
114.                         mat `Bd'=r(D_D_ss)
115.                         mat list `Bd'
116.                         mat list `By'
117.                         forvalues i = 1(1)`nlearners' {
118.                                 local ssw_`final'_d`i' = el(`Bd',`i',2)
119.                                 local ssw_`final'_y`i' = el(`By',`i',2)
120.                         }
121.                         // poolstacked weights
.                         ddml extract, show(psweights)
122.                         mat `By'=r(Y_Y_ps)
123.                         mat `Bd'=r(D_D_ps)
124.                         mat list `Bd'
125.                         mat list `By'
126.                         forvalues i = 1(1)`nlearners' {
127.                                 local psw_`final'_d`i' = el(`Bd',`i',2)
128.                                 local psw_`final'_y`i' = el(`By',`i',2)
129.                         }
130. 
.                 }
131.                 
.                 *** mspe
.                 foreach i in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 {
132.                         cap drop sqpe*
133.                         gen sqpe_y=(Y0_py_L`i'_)^2
134.                         gen sqpe_d=(D0_py_L`i'_)^2
135.                         sum sqpe_y, meanonly
136.                         local mspey`i' = r(mean)
137.                         sum sqpe_d, meanonly
138.                         local msped`i' = r(mean)
139.                 }
140.                 
.                 *** individual learners
.                 forvalues l = 1(1)`nlearners' {
141.                                 qui ddml estimate, y(Y0_py_L`l'_1) d(D0_py
> _L`l'_1) robust
142.                                 local ddml_x_`l'_b = _b[D]
143.                                 local ddml_x_`l'_se = _se[D]
144.                 }       
145. 
.                 
.                 ddml drop       
146.                                 
.                                 
.                 *** other learners              
.                 
.                 local ols_b = .
147.                 local ols_se = .
148.                 if (`p'<`obs') {
149.                         timer on 4
150.                         reg Y D x*, robust
151.                         timer off 4
152.                         local ols_b = _b[D]
153.                         local ols_se = _se[D]
154.                 }               
155.                 
.                 timer on 5
156.                 pdslasso Y D (x*), robust
157.                 timer off 5
158.                 local pds_b = _b[D]
159.                 local pds_se = _se[D]
160.         
.                 timer on 51
161.                 pdslasso Y D (c.(x*)##c.(x*)), robust
162.                 timer off 51
163.                 local pds2_b = _b[D]
164.                 local pds2_se = _se[D]
165.         
.                 timer on 52
166.                 pdslasso Y D (poly*), robust
167.                 timer off 52
168.                 local pds3_b = _b[D]
169.                 local pds3_se = _se[D]
170.         
.                 *** sd
.                 foreach var of varlist Y D {
171.                         sum `var'
172.                         local sd_`var' = r(sd)
173.                 }
174.                 
.                 *** return ************************************
.                 ereturn clear
175.                 * coefficients per final learner
.                 foreach final in nnls1 singlebest {
176.                         foreach v in st ss ps {
177.                                 return scalar ddml_`v'_`final'_b = `ddml_`
> v'_`final'_b'
178.                                 return scalar ddml_`v'_`final'_se = `ddml_
> `v'_`final'_se'
179.                         }
180.                 }
181.                 forvalues l = 1(1)`nlearners' {
182.                         return scalar ddml_x_`l'_b = `ddml_x_`l'_b' 
183.                         return scalar ddml_x_`l'_se =`ddml_x_`l'_se'
184.                 }       
185.                 * stacking weights per final learner
.                 foreach final in nnls1 singlebest {
186.                         foreach type in stw ssw psw {
187.                                 forvalues i = 1(1)`nlearners' {
188.                                         return scalar `type'_`final'_d`i' 
> = ``type'_`final'_d`i'' 
189.                                         return scalar `type'_`final'_y`i' 
> = ``type'_`final'_y`i''
190.                                 }
191.                         }
192.                 }
193.                 foreach v in oracle ols pds pds2 pds3 {
194.                         return scalar `v'_b = ``v'_b'
195.                         return scalar `v'_se = ``v'_se'
196.                 }
197.                 * mspe
.                 foreach i in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 {
198.                         return scalar mspey`i' = `mspey`i''
199.                         return scalar msped`i' = `msped`i''
200.                 }
201.                 *** return 
.                 return scalar obs = `obs'
202.                 return scalar p = `p'
203.                 return scalar dgp = `dgp'
204.                 return scalar dgp0 = `dgp0'
205.                 return scalar beta = `beta'
206.                 return scalar ry = `ry'
207.                 return scalar rd = `rd'
208.                 return scalar folds = `folds'
209.         } 
210.         else {
211.                 ereturn clear
212.                 return scalar ry = `ry'
213.                 return scalar rd = `rd'
214.                 return scalar cd = `cd'
215.                 return scalar cy = `cy'
216.         }
217. end

. 
. timer clear

. timer on 90

. forvalues i = 1(1)$reps {
  2.         clear
  3.         simulate, reps($each_reps): mysim, obs(`2') dgp(`3') folds(`4')
  4.         gen seed = `1'
  5.         save out/out_`1'_`2'_`3'_`4'_`i'.dta, replace
  6.         cap rm "error.txt"
  7. }

         command:  mysim, obs(1000) dgp(4) folds(5)
           folds:  r(folds)
              rd:  r(rd)
              ry:  r(ry)
            beta:  r(beta)
            dgp0:  r(dgp0)
             dgp:  r(dgp)
               p:  r(p)
             obs:  r(obs)
         msped14:  r(msped14)
         mspey14:  r(mspey14)
         msped13:  r(msped13)
         mspey13:  r(mspey13)
         msped12:  r(msped12)
         mspey12:  r(mspey12)
         msped11:  r(msped11)
         mspey11:  r(mspey11)
         msped10:  r(msped10)
         mspey10:  r(mspey10)
          msped9:  r(msped9)
          mspey9:  r(mspey9)
          msped8:  r(msped8)
          mspey8:  r(mspey8)
          msped7:  r(msped7)
          mspey7:  r(mspey7)
          msped6:  r(msped6)
          mspey6:  r(mspey6)
          msped5:  r(msped5)
          mspey5:  r(mspey5)
          msped4:  r(msped4)
          mspey4:  r(mspey4)
          msped3:  r(msped3)
          mspey3:  r(mspey3)
          msped2:  r(msped2)
          mspey2:  r(mspey2)
          msped1:  r(msped1)
          mspey1:  r(mspey1)
         pds3_se:  r(pds3_se)
          pds3_b:  r(pds3_b)
         pds2_se:  r(pds2_se)
          pds2_b:  r(pds2_b)
          pds_se:  r(pds_se)
           pds_b:  r(pds_b)
          ols_se:  r(ols_se)
           ols_b:  r(ols_b)
       oracle_se:  r(oracle_se)
        oracle_b:  r(oracle_b)
psw_singlebes~14:  r(psw_singlebest_y14)
psw_singlebes~14:  r(psw_singlebest_d14)
psw_singlebes~13:  r(psw_singlebest_y13)
psw_singlebes~13:  r(psw_singlebest_d13)
psw_singlebes~12:  r(psw_singlebest_y12)
psw_singlebes~12:  r(psw_singlebest_d12)
psw_singlebes~11:  r(psw_singlebest_y11)
psw_singlebes~11:  r(psw_singlebest_d11)
psw_singlebes~10:  r(psw_singlebest_y10)
psw_singlebes~10:  r(psw_singlebest_d10)
psw_singlebest~9:  r(psw_singlebest_y9)
psw_singlebest~9:  r(psw_singlebest_d9)
psw_singlebest~8:  r(psw_singlebest_y8)
psw_singlebest~8:  r(psw_singlebest_d8)
psw_singlebest~7:  r(psw_singlebest_y7)
psw_singlebest~7:  r(psw_singlebest_d7)
psw_singlebest~6:  r(psw_singlebest_y6)
psw_singlebest~6:  r(psw_singlebest_d6)
psw_singlebest~5:  r(psw_singlebest_y5)
psw_singlebest~5:  r(psw_singlebest_d5)
psw_singlebest~4:  r(psw_singlebest_y4)
psw_singlebest~4:  r(psw_singlebest_d4)
psw_singlebest~3:  r(psw_singlebest_y3)
psw_singlebest~3:  r(psw_singlebest_d3)
psw_singlebest~2:  r(psw_singlebest_y2)
psw_singlebest~2:  r(psw_singlebest_d2)
psw_singlebest~1:  r(psw_singlebest_y1)
psw_singlebest~1:  r(psw_singlebest_d1)
ssw_singlebes~14:  r(ssw_singlebest_y14)
ssw_singlebes~14:  r(ssw_singlebest_d14)
ssw_singlebes~13:  r(ssw_singlebest_y13)
ssw_singlebes~13:  r(ssw_singlebest_d13)
ssw_singlebes~12:  r(ssw_singlebest_y12)
ssw_singlebes~12:  r(ssw_singlebest_d12)
ssw_singlebes~11:  r(ssw_singlebest_y11)
ssw_singlebes~11:  r(ssw_singlebest_d11)
ssw_singlebes~10:  r(ssw_singlebest_y10)
ssw_singlebes~10:  r(ssw_singlebest_d10)
ssw_singlebest~9:  r(ssw_singlebest_y9)
ssw_singlebest~9:  r(ssw_singlebest_d9)
ssw_singlebest~8:  r(ssw_singlebest_y8)
ssw_singlebest~8:  r(ssw_singlebest_d8)
ssw_singlebest~7:  r(ssw_singlebest_y7)
ssw_singlebest~7:  r(ssw_singlebest_d7)
ssw_singlebest~6:  r(ssw_singlebest_y6)
ssw_singlebest~6:  r(ssw_singlebest_d6)
ssw_singlebest~5:  r(ssw_singlebest_y5)
ssw_singlebest~5:  r(ssw_singlebest_d5)
ssw_singlebest~4:  r(ssw_singlebest_y4)
ssw_singlebest~4:  r(ssw_singlebest_d4)
ssw_singlebest~3:  r(ssw_singlebest_y3)
ssw_singlebest~3:  r(ssw_singlebest_d3)
ssw_singlebest~2:  r(ssw_singlebest_y2)
ssw_singlebest~2:  r(ssw_singlebest_d2)
ssw_singlebest~1:  r(ssw_singlebest_y1)
ssw_singlebest~1:  r(ssw_singlebest_d1)
stw_singlebes~14:  r(stw_singlebest_y14)
stw_singlebes~14:  r(stw_singlebest_d14)
stw_singlebes~13:  r(stw_singlebest_y13)
stw_singlebes~13:  r(stw_singlebest_d13)
stw_singlebes~12:  r(stw_singlebest_y12)
stw_singlebes~12:  r(stw_singlebest_d12)
stw_singlebes~11:  r(stw_singlebest_y11)
stw_singlebes~11:  r(stw_singlebest_d11)
stw_singlebes~10:  r(stw_singlebest_y10)
stw_singlebes~10:  r(stw_singlebest_d10)
stw_singlebest~9:  r(stw_singlebest_y9)
stw_singlebest~9:  r(stw_singlebest_d9)
stw_singlebest~8:  r(stw_singlebest_y8)
stw_singlebest~8:  r(stw_singlebest_d8)
stw_singlebest~7:  r(stw_singlebest_y7)
stw_singlebest~7:  r(stw_singlebest_d7)
stw_singlebest~6:  r(stw_singlebest_y6)
stw_singlebest~6:  r(stw_singlebest_d6)
stw_singlebest~5:  r(stw_singlebest_y5)
stw_singlebest~5:  r(stw_singlebest_d5)
stw_singlebest~4:  r(stw_singlebest_y4)
stw_singlebest~4:  r(stw_singlebest_d4)
stw_singlebest~3:  r(stw_singlebest_y3)
stw_singlebest~3:  r(stw_singlebest_d3)
stw_singlebest~2:  r(stw_singlebest_y2)
stw_singlebest~2:  r(stw_singlebest_d2)
stw_singlebest~1:  r(stw_singlebest_y1)
stw_singlebest~1:  r(stw_singlebest_d1)
   psw_nnls1_y14:  r(psw_nnls1_y14)
   psw_nnls1_d14:  r(psw_nnls1_d14)
   psw_nnls1_y13:  r(psw_nnls1_y13)
   psw_nnls1_d13:  r(psw_nnls1_d13)
   psw_nnls1_y12:  r(psw_nnls1_y12)
   psw_nnls1_d12:  r(psw_nnls1_d12)
   psw_nnls1_y11:  r(psw_nnls1_y11)
   psw_nnls1_d11:  r(psw_nnls1_d11)
   psw_nnls1_y10:  r(psw_nnls1_y10)
   psw_nnls1_d10:  r(psw_nnls1_d10)
    psw_nnls1_y9:  r(psw_nnls1_y9)
    psw_nnls1_d9:  r(psw_nnls1_d9)
    psw_nnls1_y8:  r(psw_nnls1_y8)
    psw_nnls1_d8:  r(psw_nnls1_d8)
    psw_nnls1_y7:  r(psw_nnls1_y7)
    psw_nnls1_d7:  r(psw_nnls1_d7)
    psw_nnls1_y6:  r(psw_nnls1_y6)
    psw_nnls1_d6:  r(psw_nnls1_d6)
    psw_nnls1_y5:  r(psw_nnls1_y5)
    psw_nnls1_d5:  r(psw_nnls1_d5)
    psw_nnls1_y4:  r(psw_nnls1_y4)
    psw_nnls1_d4:  r(psw_nnls1_d4)
    psw_nnls1_y3:  r(psw_nnls1_y3)
    psw_nnls1_d3:  r(psw_nnls1_d3)
    psw_nnls1_y2:  r(psw_nnls1_y2)
    psw_nnls1_d2:  r(psw_nnls1_d2)
    psw_nnls1_y1:  r(psw_nnls1_y1)
    psw_nnls1_d1:  r(psw_nnls1_d1)
   ssw_nnls1_y14:  r(ssw_nnls1_y14)
   ssw_nnls1_d14:  r(ssw_nnls1_d14)
   ssw_nnls1_y13:  r(ssw_nnls1_y13)
   ssw_nnls1_d13:  r(ssw_nnls1_d13)
   ssw_nnls1_y12:  r(ssw_nnls1_y12)
   ssw_nnls1_d12:  r(ssw_nnls1_d12)
   ssw_nnls1_y11:  r(ssw_nnls1_y11)
   ssw_nnls1_d11:  r(ssw_nnls1_d11)
   ssw_nnls1_y10:  r(ssw_nnls1_y10)
   ssw_nnls1_d10:  r(ssw_nnls1_d10)
    ssw_nnls1_y9:  r(ssw_nnls1_y9)
    ssw_nnls1_d9:  r(ssw_nnls1_d9)
    ssw_nnls1_y8:  r(ssw_nnls1_y8)
    ssw_nnls1_d8:  r(ssw_nnls1_d8)
    ssw_nnls1_y7:  r(ssw_nnls1_y7)
    ssw_nnls1_d7:  r(ssw_nnls1_d7)
    ssw_nnls1_y6:  r(ssw_nnls1_y6)
    ssw_nnls1_d6:  r(ssw_nnls1_d6)
    ssw_nnls1_y5:  r(ssw_nnls1_y5)
    ssw_nnls1_d5:  r(ssw_nnls1_d5)
    ssw_nnls1_y4:  r(ssw_nnls1_y4)
    ssw_nnls1_d4:  r(ssw_nnls1_d4)
    ssw_nnls1_y3:  r(ssw_nnls1_y3)
    ssw_nnls1_d3:  r(ssw_nnls1_d3)
    ssw_nnls1_y2:  r(ssw_nnls1_y2)
    ssw_nnls1_d2:  r(ssw_nnls1_d2)
    ssw_nnls1_y1:  r(ssw_nnls1_y1)
    ssw_nnls1_d1:  r(ssw_nnls1_d1)
   stw_nnls1_y14:  r(stw_nnls1_y14)
   stw_nnls1_d14:  r(stw_nnls1_d14)
   stw_nnls1_y13:  r(stw_nnls1_y13)
   stw_nnls1_d13:  r(stw_nnls1_d13)
   stw_nnls1_y12:  r(stw_nnls1_y12)
   stw_nnls1_d12:  r(stw_nnls1_d12)
   stw_nnls1_y11:  r(stw_nnls1_y11)
   stw_nnls1_d11:  r(stw_nnls1_d11)
   stw_nnls1_y10:  r(stw_nnls1_y10)
   stw_nnls1_d10:  r(stw_nnls1_d10)
    stw_nnls1_y9:  r(stw_nnls1_y9)
    stw_nnls1_d9:  r(stw_nnls1_d9)
    stw_nnls1_y8:  r(stw_nnls1_y8)
    stw_nnls1_d8:  r(stw_nnls1_d8)
    stw_nnls1_y7:  r(stw_nnls1_y7)
    stw_nnls1_d7:  r(stw_nnls1_d7)
    stw_nnls1_y6:  r(stw_nnls1_y6)
    stw_nnls1_d6:  r(stw_nnls1_d6)
    stw_nnls1_y5:  r(stw_nnls1_y5)
    stw_nnls1_d5:  r(stw_nnls1_d5)
    stw_nnls1_y4:  r(stw_nnls1_y4)
    stw_nnls1_d4:  r(stw_nnls1_d4)
    stw_nnls1_y3:  r(stw_nnls1_y3)
    stw_nnls1_d3:  r(stw_nnls1_d3)
    stw_nnls1_y2:  r(stw_nnls1_y2)
    stw_nnls1_d2:  r(stw_nnls1_d2)
    stw_nnls1_y1:  r(stw_nnls1_y1)
    stw_nnls1_d1:  r(stw_nnls1_d1)
    ddml_x_14_se:  r(ddml_x_14_se)
     ddml_x_14_b:  r(ddml_x_14_b)
    ddml_x_13_se:  r(ddml_x_13_se)
     ddml_x_13_b:  r(ddml_x_13_b)
    ddml_x_12_se:  r(ddml_x_12_se)
     ddml_x_12_b:  r(ddml_x_12_b)
    ddml_x_11_se:  r(ddml_x_11_se)
     ddml_x_11_b:  r(ddml_x_11_b)
    ddml_x_10_se:  r(ddml_x_10_se)
     ddml_x_10_b:  r(ddml_x_10_b)
     ddml_x_9_se:  r(ddml_x_9_se)
      ddml_x_9_b:  r(ddml_x_9_b)
     ddml_x_8_se:  r(ddml_x_8_se)
      ddml_x_8_b:  r(ddml_x_8_b)
     ddml_x_7_se:  r(ddml_x_7_se)
      ddml_x_7_b:  r(ddml_x_7_b)
     ddml_x_6_se:  r(ddml_x_6_se)
      ddml_x_6_b:  r(ddml_x_6_b)
     ddml_x_5_se:  r(ddml_x_5_se)
      ddml_x_5_b:  r(ddml_x_5_b)
     ddml_x_4_se:  r(ddml_x_4_se)
      ddml_x_4_b:  r(ddml_x_4_b)
     ddml_x_3_se:  r(ddml_x_3_se)
      ddml_x_3_b:  r(ddml_x_3_b)
     ddml_x_2_se:  r(ddml_x_2_se)
      ddml_x_2_b:  r(ddml_x_2_b)
     ddml_x_1_se:  r(ddml_x_1_se)
      ddml_x_1_b:  r(ddml_x_1_b)
ddml_ps_single~e:  r(ddml_ps_singlebest_se)
ddml_ps_single~b:  r(ddml_ps_singlebest_b)
ddml_ss_single~e:  r(ddml_ss_singlebest_se)
ddml_ss_single~b:  r(ddml_ss_singlebest_b)
ddml_st_single~e:  r(ddml_st_singlebest_se)
ddml_st_single~b:  r(ddml_st_singlebest_b)
ddml_ps_nnls1_se:  r(ddml_ps_nnls1_se)
 ddml_ps_nnls1_b:  r(ddml_ps_nnls1_b)
ddml_ss_nnls1_se:  r(ddml_ss_nnls1_se)
 ddml_ss_nnls1_b:  r(ddml_ss_nnls1_b)
ddml_st_nnls1_se:  r(ddml_st_nnls1_se)
 ddml_st_nnls1_b:  r(ddml_st_nnls1_b)

Simulations (10)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..........
(note: file out/out_5534_1000_4_5_1.dta not found)
file out/out_5534_1000_4_5_1.dta saved

         command:  mysim, obs(1000) dgp(4) folds(5)
           folds:  r(folds)
              rd:  r(rd)
              ry:  r(ry)
            beta:  r(beta)
            dgp0:  r(dgp0)
             dgp:  r(dgp)
               p:  r(p)
             obs:  r(obs)
         msped14:  r(msped14)
         mspey14:  r(mspey14)
         msped13:  r(msped13)
         mspey13:  r(mspey13)
         msped12:  r(msped12)
         mspey12:  r(mspey12)
         msped11:  r(msped11)
         mspey11:  r(mspey11)
         msped10:  r(msped10)
         mspey10:  r(mspey10)
          msped9:  r(msped9)
          mspey9:  r(mspey9)
          msped8:  r(msped8)
          mspey8:  r(mspey8)
          msped7:  r(msped7)
          mspey7:  r(mspey7)
          msped6:  r(msped6)
          mspey6:  r(mspey6)
          msped5:  r(msped5)
          mspey5:  r(mspey5)
          msped4:  r(msped4)
          mspey4:  r(mspey4)
          msped3:  r(msped3)
          mspey3:  r(mspey3)
          msped2:  r(msped2)
          mspey2:  r(mspey2)
          msped1:  r(msped1)
          mspey1:  r(mspey1)
         pds3_se:  r(pds3_se)
          pds3_b:  r(pds3_b)
         pds2_se:  r(pds2_se)
          pds2_b:  r(pds2_b)
          pds_se:  r(pds_se)
           pds_b:  r(pds_b)
          ols_se:  r(ols_se)
           ols_b:  r(ols_b)
       oracle_se:  r(oracle_se)
        oracle_b:  r(oracle_b)
psw_singlebes~14:  r(psw_singlebest_y14)
psw_singlebes~14:  r(psw_singlebest_d14)
psw_singlebes~13:  r(psw_singlebest_y13)
psw_singlebes~13:  r(psw_singlebest_d13)
psw_singlebes~12:  r(psw_singlebest_y12)
psw_singlebes~12:  r(psw_singlebest_d12)
psw_singlebes~11:  r(psw_singlebest_y11)
psw_singlebes~11:  r(psw_singlebest_d11)
psw_singlebes~10:  r(psw_singlebest_y10)
psw_singlebes~10:  r(psw_singlebest_d10)
psw_singlebest~9:  r(psw_singlebest_y9)
psw_singlebest~9:  r(psw_singlebest_d9)
psw_singlebest~8:  r(psw_singlebest_y8)
psw_singlebest~8:  r(psw_singlebest_d8)
psw_singlebest~7:  r(psw_singlebest_y7)
psw_singlebest~7:  r(psw_singlebest_d7)
psw_singlebest~6:  r(psw_singlebest_y6)
psw_singlebest~6:  r(psw_singlebest_d6)
psw_singlebest~5:  r(psw_singlebest_y5)
psw_singlebest~5:  r(psw_singlebest_d5)
psw_singlebest~4:  r(psw_singlebest_y4)
psw_singlebest~4:  r(psw_singlebest_d4)
psw_singlebest~3:  r(psw_singlebest_y3)
psw_singlebest~3:  r(psw_singlebest_d3)
psw_singlebest~2:  r(psw_singlebest_y2)
psw_singlebest~2:  r(psw_singlebest_d2)
psw_singlebest~1:  r(psw_singlebest_y1)
psw_singlebest~1:  r(psw_singlebest_d1)
ssw_singlebes~14:  r(ssw_singlebest_y14)
ssw_singlebes~14:  r(ssw_singlebest_d14)
ssw_singlebes~13:  r(ssw_singlebest_y13)
ssw_singlebes~13:  r(ssw_singlebest_d13)
ssw_singlebes~12:  r(ssw_singlebest_y12)
ssw_singlebes~12:  r(ssw_singlebest_d12)
ssw_singlebes~11:  r(ssw_singlebest_y11)
ssw_singlebes~11:  r(ssw_singlebest_d11)
ssw_singlebes~10:  r(ssw_singlebest_y10)
ssw_singlebes~10:  r(ssw_singlebest_d10)
ssw_singlebest~9:  r(ssw_singlebest_y9)
ssw_singlebest~9:  r(ssw_singlebest_d9)
ssw_singlebest~8:  r(ssw_singlebest_y8)
ssw_singlebest~8:  r(ssw_singlebest_d8)
ssw_singlebest~7:  r(ssw_singlebest_y7)
ssw_singlebest~7:  r(ssw_singlebest_d7)
ssw_singlebest~6:  r(ssw_singlebest_y6)
ssw_singlebest~6:  r(ssw_singlebest_d6)
ssw_singlebest~5:  r(ssw_singlebest_y5)
ssw_singlebest~5:  r(ssw_singlebest_d5)
ssw_singlebest~4:  r(ssw_singlebest_y4)
ssw_singlebest~4:  r(ssw_singlebest_d4)
ssw_singlebest~3:  r(ssw_singlebest_y3)
ssw_singlebest~3:  r(ssw_singlebest_d3)
ssw_singlebest~2:  r(ssw_singlebest_y2)
ssw_singlebest~2:  r(ssw_singlebest_d2)
ssw_singlebest~1:  r(ssw_singlebest_y1)
ssw_singlebest~1:  r(ssw_singlebest_d1)
stw_singlebes~14:  r(stw_singlebest_y14)
stw_singlebes~14:  r(stw_singlebest_d14)
stw_singlebes~13:  r(stw_singlebest_y13)
stw_singlebes~13:  r(stw_singlebest_d13)
stw_singlebes~12:  r(stw_singlebest_y12)
stw_singlebes~12:  r(stw_singlebest_d12)
stw_singlebes~11:  r(stw_singlebest_y11)
stw_singlebes~11:  r(stw_singlebest_d11)
stw_singlebes~10:  r(stw_singlebest_y10)
stw_singlebes~10:  r(stw_singlebest_d10)
stw_singlebest~9:  r(stw_singlebest_y9)
stw_singlebest~9:  r(stw_singlebest_d9)
stw_singlebest~8:  r(stw_singlebest_y8)
stw_singlebest~8:  r(stw_singlebest_d8)
stw_singlebest~7:  r(stw_singlebest_y7)
stw_singlebest~7:  r(stw_singlebest_d7)
stw_singlebest~6:  r(stw_singlebest_y6)
stw_singlebest~6:  r(stw_singlebest_d6)
stw_singlebest~5:  r(stw_singlebest_y5)
stw_singlebest~5:  r(stw_singlebest_d5)
stw_singlebest~4:  r(stw_singlebest_y4)
stw_singlebest~4:  r(stw_singlebest_d4)
stw_singlebest~3:  r(stw_singlebest_y3)
stw_singlebest~3:  r(stw_singlebest_d3)
stw_singlebest~2:  r(stw_singlebest_y2)
stw_singlebest~2:  r(stw_singlebest_d2)
stw_singlebest~1:  r(stw_singlebest_y1)
stw_singlebest~1:  r(stw_singlebest_d1)
   psw_nnls1_y14:  r(psw_nnls1_y14)
   psw_nnls1_d14:  r(psw_nnls1_d14)
   psw_nnls1_y13:  r(psw_nnls1_y13)
   psw_nnls1_d13:  r(psw_nnls1_d13)
   psw_nnls1_y12:  r(psw_nnls1_y12)
   psw_nnls1_d12:  r(psw_nnls1_d12)
   psw_nnls1_y11:  r(psw_nnls1_y11)
   psw_nnls1_d11:  r(psw_nnls1_d11)
   psw_nnls1_y10:  r(psw_nnls1_y10)
   psw_nnls1_d10:  r(psw_nnls1_d10)
    psw_nnls1_y9:  r(psw_nnls1_y9)
    psw_nnls1_d9:  r(psw_nnls1_d9)
    psw_nnls1_y8:  r(psw_nnls1_y8)
    psw_nnls1_d8:  r(psw_nnls1_d8)
    psw_nnls1_y7:  r(psw_nnls1_y7)
    psw_nnls1_d7:  r(psw_nnls1_d7)
    psw_nnls1_y6:  r(psw_nnls1_y6)
    psw_nnls1_d6:  r(psw_nnls1_d6)
    psw_nnls1_y5:  r(psw_nnls1_y5)
    psw_nnls1_d5:  r(psw_nnls1_d5)
    psw_nnls1_y4:  r(psw_nnls1_y4)
    psw_nnls1_d4:  r(psw_nnls1_d4)
    psw_nnls1_y3:  r(psw_nnls1_y3)
    psw_nnls1_d3:  r(psw_nnls1_d3)
    psw_nnls1_y2:  r(psw_nnls1_y2)
    psw_nnls1_d2:  r(psw_nnls1_d2)
    psw_nnls1_y1:  r(psw_nnls1_y1)
    psw_nnls1_d1:  r(psw_nnls1_d1)
   ssw_nnls1_y14:  r(ssw_nnls1_y14)
   ssw_nnls1_d14:  r(ssw_nnls1_d14)
   ssw_nnls1_y13:  r(ssw_nnls1_y13)
   ssw_nnls1_d13:  r(ssw_nnls1_d13)
   ssw_nnls1_y12:  r(ssw_nnls1_y12)
   ssw_nnls1_d12:  r(ssw_nnls1_d12)
   ssw_nnls1_y11:  r(ssw_nnls1_y11)
   ssw_nnls1_d11:  r(ssw_nnls1_d11)
   ssw_nnls1_y10:  r(ssw_nnls1_y10)
   ssw_nnls1_d10:  r(ssw_nnls1_d10)
    ssw_nnls1_y9:  r(ssw_nnls1_y9)
    ssw_nnls1_d9:  r(ssw_nnls1_d9)
    ssw_nnls1_y8:  r(ssw_nnls1_y8)
    ssw_nnls1_d8:  r(ssw_nnls1_d8)
    ssw_nnls1_y7:  r(ssw_nnls1_y7)
    ssw_nnls1_d7:  r(ssw_nnls1_d7)
    ssw_nnls1_y6:  r(ssw_nnls1_y6)
    ssw_nnls1_d6:  r(ssw_nnls1_d6)
    ssw_nnls1_y5:  r(ssw_nnls1_y5)
    ssw_nnls1_d5:  r(ssw_nnls1_d5)
    ssw_nnls1_y4:  r(ssw_nnls1_y4)
    ssw_nnls1_d4:  r(ssw_nnls1_d4)
    ssw_nnls1_y3:  r(ssw_nnls1_y3)
    ssw_nnls1_d3:  r(ssw_nnls1_d3)
    ssw_nnls1_y2:  r(ssw_nnls1_y2)
    ssw_nnls1_d2:  r(ssw_nnls1_d2)
    ssw_nnls1_y1:  r(ssw_nnls1_y1)
    ssw_nnls1_d1:  r(ssw_nnls1_d1)
   stw_nnls1_y14:  r(stw_nnls1_y14)
   stw_nnls1_d14:  r(stw_nnls1_d14)
   stw_nnls1_y13:  r(stw_nnls1_y13)
   stw_nnls1_d13:  r(stw_nnls1_d13)
   stw_nnls1_y12:  r(stw_nnls1_y12)
   stw_nnls1_d12:  r(stw_nnls1_d12)
   stw_nnls1_y11:  r(stw_nnls1_y11)
   stw_nnls1_d11:  r(stw_nnls1_d11)
   stw_nnls1_y10:  r(stw_nnls1_y10)
   stw_nnls1_d10:  r(stw_nnls1_d10)
    stw_nnls1_y9:  r(stw_nnls1_y9)
    stw_nnls1_d9:  r(stw_nnls1_d9)
    stw_nnls1_y8:  r(stw_nnls1_y8)
    stw_nnls1_d8:  r(stw_nnls1_d8)
    stw_nnls1_y7:  r(stw_nnls1_y7)
    stw_nnls1_d7:  r(stw_nnls1_d7)
    stw_nnls1_y6:  r(stw_nnls1_y6)
    stw_nnls1_d6:  r(stw_nnls1_d6)
    stw_nnls1_y5:  r(stw_nnls1_y5)
    stw_nnls1_d5:  r(stw_nnls1_d5)
    stw_nnls1_y4:  r(stw_nnls1_y4)
    stw_nnls1_d4:  r(stw_nnls1_d4)
    stw_nnls1_y3:  r(stw_nnls1_y3)
    stw_nnls1_d3:  r(stw_nnls1_d3)
    stw_nnls1_y2:  r(stw_nnls1_y2)
    stw_nnls1_d2:  r(stw_nnls1_d2)
    stw_nnls1_y1:  r(stw_nnls1_y1)
    stw_nnls1_d1:  r(stw_nnls1_d1)
    ddml_x_14_se:  r(ddml_x_14_se)
     ddml_x_14_b:  r(ddml_x_14_b)
    ddml_x_13_se:  r(ddml_x_13_se)
     ddml_x_13_b:  r(ddml_x_13_b)
    ddml_x_12_se:  r(ddml_x_12_se)
     ddml_x_12_b:  r(ddml_x_12_b)
    ddml_x_11_se:  r(ddml_x_11_se)
     ddml_x_11_b:  r(ddml_x_11_b)
    ddml_x_10_se:  r(ddml_x_10_se)
     ddml_x_10_b:  r(ddml_x_10_b)
     ddml_x_9_se:  r(ddml_x_9_se)
      ddml_x_9_b:  r(ddml_x_9_b)
     ddml_x_8_se:  r(ddml_x_8_se)
      ddml_x_8_b:  r(ddml_x_8_b)
     ddml_x_7_se:  r(ddml_x_7_se)
      ddml_x_7_b:  r(ddml_x_7_b)
     ddml_x_6_se:  r(ddml_x_6_se)
      ddml_x_6_b:  r(ddml_x_6_b)
     ddml_x_5_se:  r(ddml_x_5_se)
      ddml_x_5_b:  r(ddml_x_5_b)
     ddml_x_4_se:  r(ddml_x_4_se)
      ddml_x_4_b:  r(ddml_x_4_b)
     ddml_x_3_se:  r(ddml_x_3_se)
      ddml_x_3_b:  r(ddml_x_3_b)
     ddml_x_2_se:  r(ddml_x_2_se)
      ddml_x_2_b:  r(ddml_x_2_b)
     ddml_x_1_se:  r(ddml_x_1_se)
      ddml_x_1_b:  r(ddml_x_1_b)
ddml_ps_single~e:  r(ddml_ps_singlebest_se)
ddml_ps_single~b:  r(ddml_ps_singlebest_b)
ddml_ss_single~e:  r(ddml_ss_singlebest_se)
ddml_ss_single~b:  r(ddml_ss_singlebest_b)
ddml_st_single~e:  r(ddml_st_singlebest_se)
ddml_st_single~b:  r(ddml_st_singlebest_b)
ddml_ps_nnls1_se:  r(ddml_ps_nnls1_se)
 ddml_ps_nnls1_b:  r(ddml_ps_nnls1_b)
ddml_ss_nnls1_se:  r(ddml_ss_nnls1_se)
 ddml_ss_nnls1_b:  r(ddml_ss_nnls1_b)
ddml_st_nnls1_se:  r(ddml_st_nnls1_se)
 ddml_st_nnls1_b:  r(ddml_st_nnls1_b)

Simulations (10)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..........
(note: file out/out_5534_1000_4_5_2.dta not found)
file out/out_5534_1000_4_5_2.dta saved

         command:  mysim, obs(1000) dgp(4) folds(5)
           folds:  r(folds)
              rd:  r(rd)
              ry:  r(ry)
            beta:  r(beta)
            dgp0:  r(dgp0)
             dgp:  r(dgp)
               p:  r(p)
             obs:  r(obs)
         msped14:  r(msped14)
         mspey14:  r(mspey14)
         msped13:  r(msped13)
         mspey13:  r(mspey13)
         msped12:  r(msped12)
         mspey12:  r(mspey12)
         msped11:  r(msped11)
         mspey11:  r(mspey11)
         msped10:  r(msped10)
         mspey10:  r(mspey10)
          msped9:  r(msped9)
          mspey9:  r(mspey9)
          msped8:  r(msped8)
          mspey8:  r(mspey8)
          msped7:  r(msped7)
          mspey7:  r(mspey7)
          msped6:  r(msped6)
          mspey6:  r(mspey6)
          msped5:  r(msped5)
          mspey5:  r(mspey5)
          msped4:  r(msped4)
          mspey4:  r(mspey4)
          msped3:  r(msped3)
          mspey3:  r(mspey3)
          msped2:  r(msped2)
          mspey2:  r(mspey2)
          msped1:  r(msped1)
          mspey1:  r(mspey1)
         pds3_se:  r(pds3_se)
          pds3_b:  r(pds3_b)
         pds2_se:  r(pds2_se)
          pds2_b:  r(pds2_b)
          pds_se:  r(pds_se)
           pds_b:  r(pds_b)
          ols_se:  r(ols_se)
           ols_b:  r(ols_b)
       oracle_se:  r(oracle_se)
        oracle_b:  r(oracle_b)
psw_singlebes~14:  r(psw_singlebest_y14)
psw_singlebes~14:  r(psw_singlebest_d14)
psw_singlebes~13:  r(psw_singlebest_y13)
psw_singlebes~13:  r(psw_singlebest_d13)
psw_singlebes~12:  r(psw_singlebest_y12)
psw_singlebes~12:  r(psw_singlebest_d12)
psw_singlebes~11:  r(psw_singlebest_y11)
psw_singlebes~11:  r(psw_singlebest_d11)
psw_singlebes~10:  r(psw_singlebest_y10)
psw_singlebes~10:  r(psw_singlebest_d10)
psw_singlebest~9:  r(psw_singlebest_y9)
psw_singlebest~9:  r(psw_singlebest_d9)
psw_singlebest~8:  r(psw_singlebest_y8)
psw_singlebest~8:  r(psw_singlebest_d8)
psw_singlebest~7:  r(psw_singlebest_y7)
psw_singlebest~7:  r(psw_singlebest_d7)
psw_singlebest~6:  r(psw_singlebest_y6)
psw_singlebest~6:  r(psw_singlebest_d6)
psw_singlebest~5:  r(psw_singlebest_y5)
psw_singlebest~5:  r(psw_singlebest_d5)
psw_singlebest~4:  r(psw_singlebest_y4)
psw_singlebest~4:  r(psw_singlebest_d4)
psw_singlebest~3:  r(psw_singlebest_y3)
psw_singlebest~3:  r(psw_singlebest_d3)
psw_singlebest~2:  r(psw_singlebest_y2)
psw_singlebest~2:  r(psw_singlebest_d2)
psw_singlebest~1:  r(psw_singlebest_y1)
psw_singlebest~1:  r(psw_singlebest_d1)
ssw_singlebes~14:  r(ssw_singlebest_y14)
ssw_singlebes~14:  r(ssw_singlebest_d14)
ssw_singlebes~13:  r(ssw_singlebest_y13)
ssw_singlebes~13:  r(ssw_singlebest_d13)
ssw_singlebes~12:  r(ssw_singlebest_y12)
ssw_singlebes~12:  r(ssw_singlebest_d12)
ssw_singlebes~11:  r(ssw_singlebest_y11)
ssw_singlebes~11:  r(ssw_singlebest_d11)
ssw_singlebes~10:  r(ssw_singlebest_y10)
ssw_singlebes~10:  r(ssw_singlebest_d10)
ssw_singlebest~9:  r(ssw_singlebest_y9)
ssw_singlebest~9:  r(ssw_singlebest_d9)
ssw_singlebest~8:  r(ssw_singlebest_y8)
ssw_singlebest~8:  r(ssw_singlebest_d8)
ssw_singlebest~7:  r(ssw_singlebest_y7)
ssw_singlebest~7:  r(ssw_singlebest_d7)
ssw_singlebest~6:  r(ssw_singlebest_y6)
ssw_singlebest~6:  r(ssw_singlebest_d6)
ssw_singlebest~5:  r(ssw_singlebest_y5)
ssw_singlebest~5:  r(ssw_singlebest_d5)
ssw_singlebest~4:  r(ssw_singlebest_y4)
ssw_singlebest~4:  r(ssw_singlebest_d4)
ssw_singlebest~3:  r(ssw_singlebest_y3)
ssw_singlebest~3:  r(ssw_singlebest_d3)
ssw_singlebest~2:  r(ssw_singlebest_y2)
ssw_singlebest~2:  r(ssw_singlebest_d2)
ssw_singlebest~1:  r(ssw_singlebest_y1)
ssw_singlebest~1:  r(ssw_singlebest_d1)
stw_singlebes~14:  r(stw_singlebest_y14)
stw_singlebes~14:  r(stw_singlebest_d14)
stw_singlebes~13:  r(stw_singlebest_y13)
stw_singlebes~13:  r(stw_singlebest_d13)
stw_singlebes~12:  r(stw_singlebest_y12)
stw_singlebes~12:  r(stw_singlebest_d12)
stw_singlebes~11:  r(stw_singlebest_y11)
stw_singlebes~11:  r(stw_singlebest_d11)
stw_singlebes~10:  r(stw_singlebest_y10)
stw_singlebes~10:  r(stw_singlebest_d10)
stw_singlebest~9:  r(stw_singlebest_y9)
stw_singlebest~9:  r(stw_singlebest_d9)
stw_singlebest~8:  r(stw_singlebest_y8)
stw_singlebest~8:  r(stw_singlebest_d8)
stw_singlebest~7:  r(stw_singlebest_y7)
stw_singlebest~7:  r(stw_singlebest_d7)
stw_singlebest~6:  r(stw_singlebest_y6)
stw_singlebest~6:  r(stw_singlebest_d6)
stw_singlebest~5:  r(stw_singlebest_y5)
stw_singlebest~5:  r(stw_singlebest_d5)
stw_singlebest~4:  r(stw_singlebest_y4)
stw_singlebest~4:  r(stw_singlebest_d4)
stw_singlebest~3:  r(stw_singlebest_y3)
stw_singlebest~3:  r(stw_singlebest_d3)
stw_singlebest~2:  r(stw_singlebest_y2)
stw_singlebest~2:  r(stw_singlebest_d2)
stw_singlebest~1:  r(stw_singlebest_y1)
stw_singlebest~1:  r(stw_singlebest_d1)
   psw_nnls1_y14:  r(psw_nnls1_y14)
   psw_nnls1_d14:  r(psw_nnls1_d14)
   psw_nnls1_y13:  r(psw_nnls1_y13)
   psw_nnls1_d13:  r(psw_nnls1_d13)
   psw_nnls1_y12:  r(psw_nnls1_y12)
   psw_nnls1_d12:  r(psw_nnls1_d12)
   psw_nnls1_y11:  r(psw_nnls1_y11)
   psw_nnls1_d11:  r(psw_nnls1_d11)
   psw_nnls1_y10:  r(psw_nnls1_y10)
   psw_nnls1_d10:  r(psw_nnls1_d10)
    psw_nnls1_y9:  r(psw_nnls1_y9)
    psw_nnls1_d9:  r(psw_nnls1_d9)
    psw_nnls1_y8:  r(psw_nnls1_y8)
    psw_nnls1_d8:  r(psw_nnls1_d8)
    psw_nnls1_y7:  r(psw_nnls1_y7)
    psw_nnls1_d7:  r(psw_nnls1_d7)
    psw_nnls1_y6:  r(psw_nnls1_y6)
    psw_nnls1_d6:  r(psw_nnls1_d6)
    psw_nnls1_y5:  r(psw_nnls1_y5)
    psw_nnls1_d5:  r(psw_nnls1_d5)
    psw_nnls1_y4:  r(psw_nnls1_y4)
    psw_nnls1_d4:  r(psw_nnls1_d4)
    psw_nnls1_y3:  r(psw_nnls1_y3)
    psw_nnls1_d3:  r(psw_nnls1_d3)
    psw_nnls1_y2:  r(psw_nnls1_y2)
    psw_nnls1_d2:  r(psw_nnls1_d2)
    psw_nnls1_y1:  r(psw_nnls1_y1)
    psw_nnls1_d1:  r(psw_nnls1_d1)
   ssw_nnls1_y14:  r(ssw_nnls1_y14)
   ssw_nnls1_d14:  r(ssw_nnls1_d14)
   ssw_nnls1_y13:  r(ssw_nnls1_y13)
   ssw_nnls1_d13:  r(ssw_nnls1_d13)
   ssw_nnls1_y12:  r(ssw_nnls1_y12)
   ssw_nnls1_d12:  r(ssw_nnls1_d12)
   ssw_nnls1_y11:  r(ssw_nnls1_y11)
   ssw_nnls1_d11:  r(ssw_nnls1_d11)
   ssw_nnls1_y10:  r(ssw_nnls1_y10)
   ssw_nnls1_d10:  r(ssw_nnls1_d10)
    ssw_nnls1_y9:  r(ssw_nnls1_y9)
    ssw_nnls1_d9:  r(ssw_nnls1_d9)
    ssw_nnls1_y8:  r(ssw_nnls1_y8)
    ssw_nnls1_d8:  r(ssw_nnls1_d8)
    ssw_nnls1_y7:  r(ssw_nnls1_y7)
    ssw_nnls1_d7:  r(ssw_nnls1_d7)
    ssw_nnls1_y6:  r(ssw_nnls1_y6)
    ssw_nnls1_d6:  r(ssw_nnls1_d6)
    ssw_nnls1_y5:  r(ssw_nnls1_y5)
    ssw_nnls1_d5:  r(ssw_nnls1_d5)
    ssw_nnls1_y4:  r(ssw_nnls1_y4)
    ssw_nnls1_d4:  r(ssw_nnls1_d4)
    ssw_nnls1_y3:  r(ssw_nnls1_y3)
    ssw_nnls1_d3:  r(ssw_nnls1_d3)
    ssw_nnls1_y2:  r(ssw_nnls1_y2)
    ssw_nnls1_d2:  r(ssw_nnls1_d2)
    ssw_nnls1_y1:  r(ssw_nnls1_y1)
    ssw_nnls1_d1:  r(ssw_nnls1_d1)
   stw_nnls1_y14:  r(stw_nnls1_y14)
   stw_nnls1_d14:  r(stw_nnls1_d14)
   stw_nnls1_y13:  r(stw_nnls1_y13)
   stw_nnls1_d13:  r(stw_nnls1_d13)
   stw_nnls1_y12:  r(stw_nnls1_y12)
   stw_nnls1_d12:  r(stw_nnls1_d12)
   stw_nnls1_y11:  r(stw_nnls1_y11)
   stw_nnls1_d11:  r(stw_nnls1_d11)
   stw_nnls1_y10:  r(stw_nnls1_y10)
   stw_nnls1_d10:  r(stw_nnls1_d10)
    stw_nnls1_y9:  r(stw_nnls1_y9)
    stw_nnls1_d9:  r(stw_nnls1_d9)
    stw_nnls1_y8:  r(stw_nnls1_y8)
    stw_nnls1_d8:  r(stw_nnls1_d8)
    stw_nnls1_y7:  r(stw_nnls1_y7)
    stw_nnls1_d7:  r(stw_nnls1_d7)
    stw_nnls1_y6:  r(stw_nnls1_y6)
    stw_nnls1_d6:  r(stw_nnls1_d6)
    stw_nnls1_y5:  r(stw_nnls1_y5)
    stw_nnls1_d5:  r(stw_nnls1_d5)
    stw_nnls1_y4:  r(stw_nnls1_y4)
    stw_nnls1_d4:  r(stw_nnls1_d4)
    stw_nnls1_y3:  r(stw_nnls1_y3)
    stw_nnls1_d3:  r(stw_nnls1_d3)
    stw_nnls1_y2:  r(stw_nnls1_y2)
    stw_nnls1_d2:  r(stw_nnls1_d2)
    stw_nnls1_y1:  r(stw_nnls1_y1)
    stw_nnls1_d1:  r(stw_nnls1_d1)
    ddml_x_14_se:  r(ddml_x_14_se)
     ddml_x_14_b:  r(ddml_x_14_b)
    ddml_x_13_se:  r(ddml_x_13_se)
     ddml_x_13_b:  r(ddml_x_13_b)
    ddml_x_12_se:  r(ddml_x_12_se)
     ddml_x_12_b:  r(ddml_x_12_b)
    ddml_x_11_se:  r(ddml_x_11_se)
     ddml_x_11_b:  r(ddml_x_11_b)
    ddml_x_10_se:  r(ddml_x_10_se)
     ddml_x_10_b:  r(ddml_x_10_b)
     ddml_x_9_se:  r(ddml_x_9_se)
      ddml_x_9_b:  r(ddml_x_9_b)
     ddml_x_8_se:  r(ddml_x_8_se)
      ddml_x_8_b:  r(ddml_x_8_b)
     ddml_x_7_se:  r(ddml_x_7_se)
      ddml_x_7_b:  r(ddml_x_7_b)
     ddml_x_6_se:  r(ddml_x_6_se)
      ddml_x_6_b:  r(ddml_x_6_b)
     ddml_x_5_se:  r(ddml_x_5_se)
      ddml_x_5_b:  r(ddml_x_5_b)
     ddml_x_4_se:  r(ddml_x_4_se)
      ddml_x_4_b:  r(ddml_x_4_b)
     ddml_x_3_se:  r(ddml_x_3_se)
      ddml_x_3_b:  r(ddml_x_3_b)
     ddml_x_2_se:  r(ddml_x_2_se)
      ddml_x_2_b:  r(ddml_x_2_b)
     ddml_x_1_se:  r(ddml_x_1_se)
      ddml_x_1_b:  r(ddml_x_1_b)
ddml_ps_single~e:  r(ddml_ps_singlebest_se)
ddml_ps_single~b:  r(ddml_ps_singlebest_b)
ddml_ss_single~e:  r(ddml_ss_singlebest_se)
ddml_ss_single~b:  r(ddml_ss_singlebest_b)
ddml_st_single~e:  r(ddml_st_singlebest_se)
ddml_st_single~b:  r(ddml_st_singlebest_b)
ddml_ps_nnls1_se:  r(ddml_ps_nnls1_se)
 ddml_ps_nnls1_b:  r(ddml_ps_nnls1_b)
ddml_ss_nnls1_se:  r(ddml_ss_nnls1_se)
 ddml_ss_nnls1_b:  r(ddml_ss_nnls1_b)
ddml_st_nnls1_se:  r(ddml_st_nnls1_se)
 ddml_st_nnls1_b:  r(ddml_st_nnls1_b)

Simulations (10)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..........
(note: file out/out_5534_1000_4_5_3.dta not found)
file out/out_5534_1000_4_5_3.dta saved

         command:  mysim, obs(1000) dgp(4) folds(5)
           folds:  r(folds)
              rd:  r(rd)
              ry:  r(ry)
            beta:  r(beta)
            dgp0:  r(dgp0)
             dgp:  r(dgp)
               p:  r(p)
             obs:  r(obs)
         msped14:  r(msped14)
         mspey14:  r(mspey14)
         msped13:  r(msped13)
         mspey13:  r(mspey13)
         msped12:  r(msped12)
         mspey12:  r(mspey12)
         msped11:  r(msped11)
         mspey11:  r(mspey11)
         msped10:  r(msped10)
         mspey10:  r(mspey10)
          msped9:  r(msped9)
          mspey9:  r(mspey9)
          msped8:  r(msped8)
          mspey8:  r(mspey8)
          msped7:  r(msped7)
          mspey7:  r(mspey7)
          msped6:  r(msped6)
          mspey6:  r(mspey6)
          msped5:  r(msped5)
          mspey5:  r(mspey5)
          msped4:  r(msped4)
          mspey4:  r(mspey4)
          msped3:  r(msped3)
          mspey3:  r(mspey3)
          msped2:  r(msped2)
          mspey2:  r(mspey2)
          msped1:  r(msped1)
          mspey1:  r(mspey1)
         pds3_se:  r(pds3_se)
          pds3_b:  r(pds3_b)
         pds2_se:  r(pds2_se)
          pds2_b:  r(pds2_b)
          pds_se:  r(pds_se)
           pds_b:  r(pds_b)
          ols_se:  r(ols_se)
           ols_b:  r(ols_b)
       oracle_se:  r(oracle_se)
        oracle_b:  r(oracle_b)
psw_singlebes~14:  r(psw_singlebest_y14)
psw_singlebes~14:  r(psw_singlebest_d14)
psw_singlebes~13:  r(psw_singlebest_y13)
psw_singlebes~13:  r(psw_singlebest_d13)
psw_singlebes~12:  r(psw_singlebest_y12)
psw_singlebes~12:  r(psw_singlebest_d12)
psw_singlebes~11:  r(psw_singlebest_y11)
psw_singlebes~11:  r(psw_singlebest_d11)
psw_singlebes~10:  r(psw_singlebest_y10)
psw_singlebes~10:  r(psw_singlebest_d10)
psw_singlebest~9:  r(psw_singlebest_y9)
psw_singlebest~9:  r(psw_singlebest_d9)
psw_singlebest~8:  r(psw_singlebest_y8)
psw_singlebest~8:  r(psw_singlebest_d8)
psw_singlebest~7:  r(psw_singlebest_y7)
psw_singlebest~7:  r(psw_singlebest_d7)
psw_singlebest~6:  r(psw_singlebest_y6)
psw_singlebest~6:  r(psw_singlebest_d6)
psw_singlebest~5:  r(psw_singlebest_y5)
psw_singlebest~5:  r(psw_singlebest_d5)
psw_singlebest~4:  r(psw_singlebest_y4)
psw_singlebest~4:  r(psw_singlebest_d4)
psw_singlebest~3:  r(psw_singlebest_y3)
psw_singlebest~3:  r(psw_singlebest_d3)
psw_singlebest~2:  r(psw_singlebest_y2)
psw_singlebest~2:  r(psw_singlebest_d2)
psw_singlebest~1:  r(psw_singlebest_y1)
psw_singlebest~1:  r(psw_singlebest_d1)
ssw_singlebes~14:  r(ssw_singlebest_y14)
ssw_singlebes~14:  r(ssw_singlebest_d14)
ssw_singlebes~13:  r(ssw_singlebest_y13)
ssw_singlebes~13:  r(ssw_singlebest_d13)
ssw_singlebes~12:  r(ssw_singlebest_y12)
ssw_singlebes~12:  r(ssw_singlebest_d12)
ssw_singlebes~11:  r(ssw_singlebest_y11)
ssw_singlebes~11:  r(ssw_singlebest_d11)
ssw_singlebes~10:  r(ssw_singlebest_y10)
ssw_singlebes~10:  r(ssw_singlebest_d10)
ssw_singlebest~9:  r(ssw_singlebest_y9)
ssw_singlebest~9:  r(ssw_singlebest_d9)
ssw_singlebest~8:  r(ssw_singlebest_y8)
ssw_singlebest~8:  r(ssw_singlebest_d8)
ssw_singlebest~7:  r(ssw_singlebest_y7)
ssw_singlebest~7:  r(ssw_singlebest_d7)
ssw_singlebest~6:  r(ssw_singlebest_y6)
ssw_singlebest~6:  r(ssw_singlebest_d6)
ssw_singlebest~5:  r(ssw_singlebest_y5)
ssw_singlebest~5:  r(ssw_singlebest_d5)
ssw_singlebest~4:  r(ssw_singlebest_y4)
ssw_singlebest~4:  r(ssw_singlebest_d4)
ssw_singlebest~3:  r(ssw_singlebest_y3)
ssw_singlebest~3:  r(ssw_singlebest_d3)
ssw_singlebest~2:  r(ssw_singlebest_y2)
ssw_singlebest~2:  r(ssw_singlebest_d2)
ssw_singlebest~1:  r(ssw_singlebest_y1)
ssw_singlebest~1:  r(ssw_singlebest_d1)
stw_singlebes~14:  r(stw_singlebest_y14)
stw_singlebes~14:  r(stw_singlebest_d14)
stw_singlebes~13:  r(stw_singlebest_y13)
stw_singlebes~13:  r(stw_singlebest_d13)
stw_singlebes~12:  r(stw_singlebest_y12)
stw_singlebes~12:  r(stw_singlebest_d12)
stw_singlebes~11:  r(stw_singlebest_y11)
stw_singlebes~11:  r(stw_singlebest_d11)
stw_singlebes~10:  r(stw_singlebest_y10)
stw_singlebes~10:  r(stw_singlebest_d10)
stw_singlebest~9:  r(stw_singlebest_y9)
stw_singlebest~9:  r(stw_singlebest_d9)
stw_singlebest~8:  r(stw_singlebest_y8)
stw_singlebest~8:  r(stw_singlebest_d8)
stw_singlebest~7:  r(stw_singlebest_y7)
stw_singlebest~7:  r(stw_singlebest_d7)
stw_singlebest~6:  r(stw_singlebest_y6)
stw_singlebest~6:  r(stw_singlebest_d6)
stw_singlebest~5:  r(stw_singlebest_y5)
stw_singlebest~5:  r(stw_singlebest_d5)
stw_singlebest~4:  r(stw_singlebest_y4)
stw_singlebest~4:  r(stw_singlebest_d4)
stw_singlebest~3:  r(stw_singlebest_y3)
stw_singlebest~3:  r(stw_singlebest_d3)
stw_singlebest~2:  r(stw_singlebest_y2)
stw_singlebest~2:  r(stw_singlebest_d2)
stw_singlebest~1:  r(stw_singlebest_y1)
stw_singlebest~1:  r(stw_singlebest_d1)
   psw_nnls1_y14:  r(psw_nnls1_y14)
   psw_nnls1_d14:  r(psw_nnls1_d14)
   psw_nnls1_y13:  r(psw_nnls1_y13)
   psw_nnls1_d13:  r(psw_nnls1_d13)
   psw_nnls1_y12:  r(psw_nnls1_y12)
   psw_nnls1_d12:  r(psw_nnls1_d12)
   psw_nnls1_y11:  r(psw_nnls1_y11)
   psw_nnls1_d11:  r(psw_nnls1_d11)
   psw_nnls1_y10:  r(psw_nnls1_y10)
   psw_nnls1_d10:  r(psw_nnls1_d10)
    psw_nnls1_y9:  r(psw_nnls1_y9)
    psw_nnls1_d9:  r(psw_nnls1_d9)
    psw_nnls1_y8:  r(psw_nnls1_y8)
    psw_nnls1_d8:  r(psw_nnls1_d8)
    psw_nnls1_y7:  r(psw_nnls1_y7)
    psw_nnls1_d7:  r(psw_nnls1_d7)
    psw_nnls1_y6:  r(psw_nnls1_y6)
    psw_nnls1_d6:  r(psw_nnls1_d6)
    psw_nnls1_y5:  r(psw_nnls1_y5)
    psw_nnls1_d5:  r(psw_nnls1_d5)
    psw_nnls1_y4:  r(psw_nnls1_y4)
    psw_nnls1_d4:  r(psw_nnls1_d4)
    psw_nnls1_y3:  r(psw_nnls1_y3)
    psw_nnls1_d3:  r(psw_nnls1_d3)
    psw_nnls1_y2:  r(psw_nnls1_y2)
    psw_nnls1_d2:  r(psw_nnls1_d2)
    psw_nnls1_y1:  r(psw_nnls1_y1)
    psw_nnls1_d1:  r(psw_nnls1_d1)
   ssw_nnls1_y14:  r(ssw_nnls1_y14)
   ssw_nnls1_d14:  r(ssw_nnls1_d14)
   ssw_nnls1_y13:  r(ssw_nnls1_y13)
   ssw_nnls1_d13:  r(ssw_nnls1_d13)
   ssw_nnls1_y12:  r(ssw_nnls1_y12)
   ssw_nnls1_d12:  r(ssw_nnls1_d12)
   ssw_nnls1_y11:  r(ssw_nnls1_y11)
   ssw_nnls1_d11:  r(ssw_nnls1_d11)
   ssw_nnls1_y10:  r(ssw_nnls1_y10)
   ssw_nnls1_d10:  r(ssw_nnls1_d10)
    ssw_nnls1_y9:  r(ssw_nnls1_y9)
    ssw_nnls1_d9:  r(ssw_nnls1_d9)
    ssw_nnls1_y8:  r(ssw_nnls1_y8)
    ssw_nnls1_d8:  r(ssw_nnls1_d8)
    ssw_nnls1_y7:  r(ssw_nnls1_y7)
    ssw_nnls1_d7:  r(ssw_nnls1_d7)
    ssw_nnls1_y6:  r(ssw_nnls1_y6)
    ssw_nnls1_d6:  r(ssw_nnls1_d6)
    ssw_nnls1_y5:  r(ssw_nnls1_y5)
    ssw_nnls1_d5:  r(ssw_nnls1_d5)
    ssw_nnls1_y4:  r(ssw_nnls1_y4)
    ssw_nnls1_d4:  r(ssw_nnls1_d4)
    ssw_nnls1_y3:  r(ssw_nnls1_y3)
    ssw_nnls1_d3:  r(ssw_nnls1_d3)
    ssw_nnls1_y2:  r(ssw_nnls1_y2)
    ssw_nnls1_d2:  r(ssw_nnls1_d2)
    ssw_nnls1_y1:  r(ssw_nnls1_y1)
    ssw_nnls1_d1:  r(ssw_nnls1_d1)
   stw_nnls1_y14:  r(stw_nnls1_y14)
   stw_nnls1_d14:  r(stw_nnls1_d14)
   stw_nnls1_y13:  r(stw_nnls1_y13)
   stw_nnls1_d13:  r(stw_nnls1_d13)
   stw_nnls1_y12:  r(stw_nnls1_y12)
   stw_nnls1_d12:  r(stw_nnls1_d12)
   stw_nnls1_y11:  r(stw_nnls1_y11)
   stw_nnls1_d11:  r(stw_nnls1_d11)
   stw_nnls1_y10:  r(stw_nnls1_y10)
   stw_nnls1_d10:  r(stw_nnls1_d10)
    stw_nnls1_y9:  r(stw_nnls1_y9)
    stw_nnls1_d9:  r(stw_nnls1_d9)
    stw_nnls1_y8:  r(stw_nnls1_y8)
    stw_nnls1_d8:  r(stw_nnls1_d8)
    stw_nnls1_y7:  r(stw_nnls1_y7)
    stw_nnls1_d7:  r(stw_nnls1_d7)
    stw_nnls1_y6:  r(stw_nnls1_y6)
    stw_nnls1_d6:  r(stw_nnls1_d6)
    stw_nnls1_y5:  r(stw_nnls1_y5)
    stw_nnls1_d5:  r(stw_nnls1_d5)
    stw_nnls1_y4:  r(stw_nnls1_y4)
    stw_nnls1_d4:  r(stw_nnls1_d4)
    stw_nnls1_y3:  r(stw_nnls1_y3)
    stw_nnls1_d3:  r(stw_nnls1_d3)
    stw_nnls1_y2:  r(stw_nnls1_y2)
    stw_nnls1_d2:  r(stw_nnls1_d2)
    stw_nnls1_y1:  r(stw_nnls1_y1)
    stw_nnls1_d1:  r(stw_nnls1_d1)
    ddml_x_14_se:  r(ddml_x_14_se)
     ddml_x_14_b:  r(ddml_x_14_b)
    ddml_x_13_se:  r(ddml_x_13_se)
     ddml_x_13_b:  r(ddml_x_13_b)
    ddml_x_12_se:  r(ddml_x_12_se)
     ddml_x_12_b:  r(ddml_x_12_b)
    ddml_x_11_se:  r(ddml_x_11_se)
     ddml_x_11_b:  r(ddml_x_11_b)
    ddml_x_10_se:  r(ddml_x_10_se)
     ddml_x_10_b:  r(ddml_x_10_b)
     ddml_x_9_se:  r(ddml_x_9_se)
      ddml_x_9_b:  r(ddml_x_9_b)
     ddml_x_8_se:  r(ddml_x_8_se)
      ddml_x_8_b:  r(ddml_x_8_b)
     ddml_x_7_se:  r(ddml_x_7_se)
      ddml_x_7_b:  r(ddml_x_7_b)
     ddml_x_6_se:  r(ddml_x_6_se)
      ddml_x_6_b:  r(ddml_x_6_b)
     ddml_x_5_se:  r(ddml_x_5_se)
      ddml_x_5_b:  r(ddml_x_5_b)
     ddml_x_4_se:  r(ddml_x_4_se)
      ddml_x_4_b:  r(ddml_x_4_b)
     ddml_x_3_se:  r(ddml_x_3_se)
      ddml_x_3_b:  r(ddml_x_3_b)
     ddml_x_2_se:  r(ddml_x_2_se)
      ddml_x_2_b:  r(ddml_x_2_b)
     ddml_x_1_se:  r(ddml_x_1_se)
      ddml_x_1_b:  r(ddml_x_1_b)
ddml_ps_single~e:  r(ddml_ps_singlebest_se)
ddml_ps_single~b:  r(ddml_ps_singlebest_b)
ddml_ss_single~e:  r(ddml_ss_singlebest_se)
ddml_ss_single~b:  r(ddml_ss_singlebest_b)
ddml_st_single~e:  r(ddml_st_singlebest_se)
ddml_st_single~b:  r(ddml_st_singlebest_b)
ddml_ps_nnls1_se:  r(ddml_ps_nnls1_se)
 ddml_ps_nnls1_b:  r(ddml_ps_nnls1_b)
ddml_ss_nnls1_se:  r(ddml_ss_nnls1_se)
 ddml_ss_nnls1_b:  r(ddml_ss_nnls1_b)
ddml_st_nnls1_se:  r(ddml_st_nnls1_se)
 ddml_st_nnls1_b:  r(ddml_st_nnls1_b)

Simulations (10)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..........
(note: file out/out_5534_1000_4_5_4.dta not found)
file out/out_5534_1000_4_5_4.dta saved

         command:  mysim, obs(1000) dgp(4) folds(5)
           folds:  r(folds)
              rd:  r(rd)
              ry:  r(ry)
            beta:  r(beta)
            dgp0:  r(dgp0)
             dgp:  r(dgp)
               p:  r(p)
             obs:  r(obs)
         msped14:  r(msped14)
         mspey14:  r(mspey14)
         msped13:  r(msped13)
         mspey13:  r(mspey13)
         msped12:  r(msped12)
         mspey12:  r(mspey12)
         msped11:  r(msped11)
         mspey11:  r(mspey11)
         msped10:  r(msped10)
         mspey10:  r(mspey10)
          msped9:  r(msped9)
          mspey9:  r(mspey9)
          msped8:  r(msped8)
          mspey8:  r(mspey8)
          msped7:  r(msped7)
          mspey7:  r(mspey7)
          msped6:  r(msped6)
          mspey6:  r(mspey6)
          msped5:  r(msped5)
          mspey5:  r(mspey5)
          msped4:  r(msped4)
          mspey4:  r(mspey4)
          msped3:  r(msped3)
          mspey3:  r(mspey3)
          msped2:  r(msped2)
          mspey2:  r(mspey2)
          msped1:  r(msped1)
          mspey1:  r(mspey1)
         pds3_se:  r(pds3_se)
          pds3_b:  r(pds3_b)
         pds2_se:  r(pds2_se)
          pds2_b:  r(pds2_b)
          pds_se:  r(pds_se)
           pds_b:  r(pds_b)
          ols_se:  r(ols_se)
           ols_b:  r(ols_b)
       oracle_se:  r(oracle_se)
        oracle_b:  r(oracle_b)
psw_singlebes~14:  r(psw_singlebest_y14)
psw_singlebes~14:  r(psw_singlebest_d14)
psw_singlebes~13:  r(psw_singlebest_y13)
psw_singlebes~13:  r(psw_singlebest_d13)
psw_singlebes~12:  r(psw_singlebest_y12)
psw_singlebes~12:  r(psw_singlebest_d12)
psw_singlebes~11:  r(psw_singlebest_y11)
psw_singlebes~11:  r(psw_singlebest_d11)
psw_singlebes~10:  r(psw_singlebest_y10)
psw_singlebes~10:  r(psw_singlebest_d10)
psw_singlebest~9:  r(psw_singlebest_y9)
psw_singlebest~9:  r(psw_singlebest_d9)
psw_singlebest~8:  r(psw_singlebest_y8)
psw_singlebest~8:  r(psw_singlebest_d8)
psw_singlebest~7:  r(psw_singlebest_y7)
psw_singlebest~7:  r(psw_singlebest_d7)
psw_singlebest~6:  r(psw_singlebest_y6)
psw_singlebest~6:  r(psw_singlebest_d6)
psw_singlebest~5:  r(psw_singlebest_y5)
psw_singlebest~5:  r(psw_singlebest_d5)
psw_singlebest~4:  r(psw_singlebest_y4)
psw_singlebest~4:  r(psw_singlebest_d4)
psw_singlebest~3:  r(psw_singlebest_y3)
psw_singlebest~3:  r(psw_singlebest_d3)
psw_singlebest~2:  r(psw_singlebest_y2)
psw_singlebest~2:  r(psw_singlebest_d2)
psw_singlebest~1:  r(psw_singlebest_y1)
psw_singlebest~1:  r(psw_singlebest_d1)
ssw_singlebes~14:  r(ssw_singlebest_y14)
ssw_singlebes~14:  r(ssw_singlebest_d14)
ssw_singlebes~13:  r(ssw_singlebest_y13)
ssw_singlebes~13:  r(ssw_singlebest_d13)
ssw_singlebes~12:  r(ssw_singlebest_y12)
ssw_singlebes~12:  r(ssw_singlebest_d12)
ssw_singlebes~11:  r(ssw_singlebest_y11)
ssw_singlebes~11:  r(ssw_singlebest_d11)
ssw_singlebes~10:  r(ssw_singlebest_y10)
ssw_singlebes~10:  r(ssw_singlebest_d10)
ssw_singlebest~9:  r(ssw_singlebest_y9)
ssw_singlebest~9:  r(ssw_singlebest_d9)
ssw_singlebest~8:  r(ssw_singlebest_y8)
ssw_singlebest~8:  r(ssw_singlebest_d8)
ssw_singlebest~7:  r(ssw_singlebest_y7)
ssw_singlebest~7:  r(ssw_singlebest_d7)
ssw_singlebest~6:  r(ssw_singlebest_y6)
ssw_singlebest~6:  r(ssw_singlebest_d6)
ssw_singlebest~5:  r(ssw_singlebest_y5)
ssw_singlebest~5:  r(ssw_singlebest_d5)
ssw_singlebest~4:  r(ssw_singlebest_y4)
ssw_singlebest~4:  r(ssw_singlebest_d4)
ssw_singlebest~3:  r(ssw_singlebest_y3)
ssw_singlebest~3:  r(ssw_singlebest_d3)
ssw_singlebest~2:  r(ssw_singlebest_y2)
ssw_singlebest~2:  r(ssw_singlebest_d2)
ssw_singlebest~1:  r(ssw_singlebest_y1)
ssw_singlebest~1:  r(ssw_singlebest_d1)
stw_singlebes~14:  r(stw_singlebest_y14)
stw_singlebes~14:  r(stw_singlebest_d14)
stw_singlebes~13:  r(stw_singlebest_y13)
stw_singlebes~13:  r(stw_singlebest_d13)
stw_singlebes~12:  r(stw_singlebest_y12)
stw_singlebes~12:  r(stw_singlebest_d12)
stw_singlebes~11:  r(stw_singlebest_y11)
stw_singlebes~11:  r(stw_singlebest_d11)
stw_singlebes~10:  r(stw_singlebest_y10)
stw_singlebes~10:  r(stw_singlebest_d10)
stw_singlebest~9:  r(stw_singlebest_y9)
stw_singlebest~9:  r(stw_singlebest_d9)
stw_singlebest~8:  r(stw_singlebest_y8)
stw_singlebest~8:  r(stw_singlebest_d8)
stw_singlebest~7:  r(stw_singlebest_y7)
stw_singlebest~7:  r(stw_singlebest_d7)
stw_singlebest~6:  r(stw_singlebest_y6)
stw_singlebest~6:  r(stw_singlebest_d6)
stw_singlebest~5:  r(stw_singlebest_y5)
stw_singlebest~5:  r(stw_singlebest_d5)
stw_singlebest~4:  r(stw_singlebest_y4)
stw_singlebest~4:  r(stw_singlebest_d4)
stw_singlebest~3:  r(stw_singlebest_y3)
stw_singlebest~3:  r(stw_singlebest_d3)
stw_singlebest~2:  r(stw_singlebest_y2)
stw_singlebest~2:  r(stw_singlebest_d2)
stw_singlebest~1:  r(stw_singlebest_y1)
stw_singlebest~1:  r(stw_singlebest_d1)
   psw_nnls1_y14:  r(psw_nnls1_y14)
   psw_nnls1_d14:  r(psw_nnls1_d14)
   psw_nnls1_y13:  r(psw_nnls1_y13)
   psw_nnls1_d13:  r(psw_nnls1_d13)
   psw_nnls1_y12:  r(psw_nnls1_y12)
   psw_nnls1_d12:  r(psw_nnls1_d12)
   psw_nnls1_y11:  r(psw_nnls1_y11)
   psw_nnls1_d11:  r(psw_nnls1_d11)
   psw_nnls1_y10:  r(psw_nnls1_y10)
   psw_nnls1_d10:  r(psw_nnls1_d10)
    psw_nnls1_y9:  r(psw_nnls1_y9)
    psw_nnls1_d9:  r(psw_nnls1_d9)
    psw_nnls1_y8:  r(psw_nnls1_y8)
    psw_nnls1_d8:  r(psw_nnls1_d8)
    psw_nnls1_y7:  r(psw_nnls1_y7)
    psw_nnls1_d7:  r(psw_nnls1_d7)
    psw_nnls1_y6:  r(psw_nnls1_y6)
    psw_nnls1_d6:  r(psw_nnls1_d6)
    psw_nnls1_y5:  r(psw_nnls1_y5)
    psw_nnls1_d5:  r(psw_nnls1_d5)
    psw_nnls1_y4:  r(psw_nnls1_y4)
    psw_nnls1_d4:  r(psw_nnls1_d4)
    psw_nnls1_y3:  r(psw_nnls1_y3)
    psw_nnls1_d3:  r(psw_nnls1_d3)
    psw_nnls1_y2:  r(psw_nnls1_y2)
    psw_nnls1_d2:  r(psw_nnls1_d2)
    psw_nnls1_y1:  r(psw_nnls1_y1)
    psw_nnls1_d1:  r(psw_nnls1_d1)
   ssw_nnls1_y14:  r(ssw_nnls1_y14)
   ssw_nnls1_d14:  r(ssw_nnls1_d14)
   ssw_nnls1_y13:  r(ssw_nnls1_y13)
   ssw_nnls1_d13:  r(ssw_nnls1_d13)
   ssw_nnls1_y12:  r(ssw_nnls1_y12)
   ssw_nnls1_d12:  r(ssw_nnls1_d12)
   ssw_nnls1_y11:  r(ssw_nnls1_y11)
   ssw_nnls1_d11:  r(ssw_nnls1_d11)
   ssw_nnls1_y10:  r(ssw_nnls1_y10)
   ssw_nnls1_d10:  r(ssw_nnls1_d10)
    ssw_nnls1_y9:  r(ssw_nnls1_y9)
    ssw_nnls1_d9:  r(ssw_nnls1_d9)
    ssw_nnls1_y8:  r(ssw_nnls1_y8)
    ssw_nnls1_d8:  r(ssw_nnls1_d8)
    ssw_nnls1_y7:  r(ssw_nnls1_y7)
    ssw_nnls1_d7:  r(ssw_nnls1_d7)
    ssw_nnls1_y6:  r(ssw_nnls1_y6)
    ssw_nnls1_d6:  r(ssw_nnls1_d6)
    ssw_nnls1_y5:  r(ssw_nnls1_y5)
    ssw_nnls1_d5:  r(ssw_nnls1_d5)
    ssw_nnls1_y4:  r(ssw_nnls1_y4)
    ssw_nnls1_d4:  r(ssw_nnls1_d4)
    ssw_nnls1_y3:  r(ssw_nnls1_y3)
    ssw_nnls1_d3:  r(ssw_nnls1_d3)
    ssw_nnls1_y2:  r(ssw_nnls1_y2)
    ssw_nnls1_d2:  r(ssw_nnls1_d2)
    ssw_nnls1_y1:  r(ssw_nnls1_y1)
    ssw_nnls1_d1:  r(ssw_nnls1_d1)
   stw_nnls1_y14:  r(stw_nnls1_y14)
   stw_nnls1_d14:  r(stw_nnls1_d14)
   stw_nnls1_y13:  r(stw_nnls1_y13)
   stw_nnls1_d13:  r(stw_nnls1_d13)
   stw_nnls1_y12:  r(stw_nnls1_y12)
   stw_nnls1_d12:  r(stw_nnls1_d12)
   stw_nnls1_y11:  r(stw_nnls1_y11)
   stw_nnls1_d11:  r(stw_nnls1_d11)
   stw_nnls1_y10:  r(stw_nnls1_y10)
   stw_nnls1_d10:  r(stw_nnls1_d10)
    stw_nnls1_y9:  r(stw_nnls1_y9)
    stw_nnls1_d9:  r(stw_nnls1_d9)
    stw_nnls1_y8:  r(stw_nnls1_y8)
    stw_nnls1_d8:  r(stw_nnls1_d8)
    stw_nnls1_y7:  r(stw_nnls1_y7)
    stw_nnls1_d7:  r(stw_nnls1_d7)
    stw_nnls1_y6:  r(stw_nnls1_y6)
    stw_nnls1_d6:  r(stw_nnls1_d6)
    stw_nnls1_y5:  r(stw_nnls1_y5)
    stw_nnls1_d5:  r(stw_nnls1_d5)
    stw_nnls1_y4:  r(stw_nnls1_y4)
    stw_nnls1_d4:  r(stw_nnls1_d4)
    stw_nnls1_y3:  r(stw_nnls1_y3)
    stw_nnls1_d3:  r(stw_nnls1_d3)
    stw_nnls1_y2:  r(stw_nnls1_y2)
    stw_nnls1_d2:  r(stw_nnls1_d2)
    stw_nnls1_y1:  r(stw_nnls1_y1)
    stw_nnls1_d1:  r(stw_nnls1_d1)
    ddml_x_14_se:  r(ddml_x_14_se)
     ddml_x_14_b:  r(ddml_x_14_b)
    ddml_x_13_se:  r(ddml_x_13_se)
     ddml_x_13_b:  r(ddml_x_13_b)
    ddml_x_12_se:  r(ddml_x_12_se)
     ddml_x_12_b:  r(ddml_x_12_b)
    ddml_x_11_se:  r(ddml_x_11_se)
     ddml_x_11_b:  r(ddml_x_11_b)
    ddml_x_10_se:  r(ddml_x_10_se)
     ddml_x_10_b:  r(ddml_x_10_b)
     ddml_x_9_se:  r(ddml_x_9_se)
      ddml_x_9_b:  r(ddml_x_9_b)
     ddml_x_8_se:  r(ddml_x_8_se)
      ddml_x_8_b:  r(ddml_x_8_b)
     ddml_x_7_se:  r(ddml_x_7_se)
      ddml_x_7_b:  r(ddml_x_7_b)
     ddml_x_6_se:  r(ddml_x_6_se)
      ddml_x_6_b:  r(ddml_x_6_b)
     ddml_x_5_se:  r(ddml_x_5_se)
      ddml_x_5_b:  r(ddml_x_5_b)
     ddml_x_4_se:  r(ddml_x_4_se)
      ddml_x_4_b:  r(ddml_x_4_b)
     ddml_x_3_se:  r(ddml_x_3_se)
      ddml_x_3_b:  r(ddml_x_3_b)
     ddml_x_2_se:  r(ddml_x_2_se)
      ddml_x_2_b:  r(ddml_x_2_b)
     ddml_x_1_se:  r(ddml_x_1_se)
      ddml_x_1_b:  r(ddml_x_1_b)
ddml_ps_single~e:  r(ddml_ps_singlebest_se)
ddml_ps_single~b:  r(ddml_ps_singlebest_b)
ddml_ss_single~e:  r(ddml_ss_singlebest_se)
ddml_ss_single~b:  r(ddml_ss_singlebest_b)
ddml_st_single~e:  r(ddml_st_singlebest_se)
ddml_st_single~b:  r(ddml_st_singlebest_b)
ddml_ps_nnls1_se:  r(ddml_ps_nnls1_se)
 ddml_ps_nnls1_b:  r(ddml_ps_nnls1_b)
ddml_ss_nnls1_se:  r(ddml_ss_nnls1_se)
 ddml_ss_nnls1_b:  r(ddml_ss_nnls1_b)
ddml_st_nnls1_se:  r(ddml_st_nnls1_se)
 ddml_st_nnls1_b:  r(ddml_st_nnls1_b)

Simulations (10)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..........
(note: file out/out_5534_1000_4_5_5.dta not found)
file out/out_5534_1000_4_5_5.dta saved

         command:  mysim, obs(1000) dgp(4) folds(5)
           folds:  r(folds)
              rd:  r(rd)
              ry:  r(ry)
            beta:  r(beta)
            dgp0:  r(dgp0)
             dgp:  r(dgp)
               p:  r(p)
             obs:  r(obs)
         msped14:  r(msped14)
         mspey14:  r(mspey14)
         msped13:  r(msped13)
         mspey13:  r(mspey13)
         msped12:  r(msped12)
         mspey12:  r(mspey12)
         msped11:  r(msped11)
         mspey11:  r(mspey11)
         msped10:  r(msped10)
         mspey10:  r(mspey10)
          msped9:  r(msped9)
          mspey9:  r(mspey9)
          msped8:  r(msped8)
          mspey8:  r(mspey8)
          msped7:  r(msped7)
          mspey7:  r(mspey7)
          msped6:  r(msped6)
          mspey6:  r(mspey6)
          msped5:  r(msped5)
          mspey5:  r(mspey5)
          msped4:  r(msped4)
          mspey4:  r(mspey4)
          msped3:  r(msped3)
          mspey3:  r(mspey3)
          msped2:  r(msped2)
          mspey2:  r(mspey2)
          msped1:  r(msped1)
          mspey1:  r(mspey1)
         pds3_se:  r(pds3_se)
          pds3_b:  r(pds3_b)
         pds2_se:  r(pds2_se)
          pds2_b:  r(pds2_b)
          pds_se:  r(pds_se)
           pds_b:  r(pds_b)
          ols_se:  r(ols_se)
           ols_b:  r(ols_b)
       oracle_se:  r(oracle_se)
        oracle_b:  r(oracle_b)
psw_singlebes~14:  r(psw_singlebest_y14)
psw_singlebes~14:  r(psw_singlebest_d14)
psw_singlebes~13:  r(psw_singlebest_y13)
psw_singlebes~13:  r(psw_singlebest_d13)
psw_singlebes~12:  r(psw_singlebest_y12)
psw_singlebes~12:  r(psw_singlebest_d12)
psw_singlebes~11:  r(psw_singlebest_y11)
psw_singlebes~11:  r(psw_singlebest_d11)
psw_singlebes~10:  r(psw_singlebest_y10)
psw_singlebes~10:  r(psw_singlebest_d10)
psw_singlebest~9:  r(psw_singlebest_y9)
psw_singlebest~9:  r(psw_singlebest_d9)
psw_singlebest~8:  r(psw_singlebest_y8)
psw_singlebest~8:  r(psw_singlebest_d8)
psw_singlebest~7:  r(psw_singlebest_y7)
psw_singlebest~7:  r(psw_singlebest_d7)
psw_singlebest~6:  r(psw_singlebest_y6)
psw_singlebest~6:  r(psw_singlebest_d6)
psw_singlebest~5:  r(psw_singlebest_y5)
psw_singlebest~5:  r(psw_singlebest_d5)
psw_singlebest~4:  r(psw_singlebest_y4)
psw_singlebest~4:  r(psw_singlebest_d4)
psw_singlebest~3:  r(psw_singlebest_y3)
psw_singlebest~3:  r(psw_singlebest_d3)
psw_singlebest~2:  r(psw_singlebest_y2)
psw_singlebest~2:  r(psw_singlebest_d2)
psw_singlebest~1:  r(psw_singlebest_y1)
psw_singlebest~1:  r(psw_singlebest_d1)
ssw_singlebes~14:  r(ssw_singlebest_y14)
ssw_singlebes~14:  r(ssw_singlebest_d14)
ssw_singlebes~13:  r(ssw_singlebest_y13)
ssw_singlebes~13:  r(ssw_singlebest_d13)
ssw_singlebes~12:  r(ssw_singlebest_y12)
ssw_singlebes~12:  r(ssw_singlebest_d12)
ssw_singlebes~11:  r(ssw_singlebest_y11)
ssw_singlebes~11:  r(ssw_singlebest_d11)
ssw_singlebes~10:  r(ssw_singlebest_y10)
ssw_singlebes~10:  r(ssw_singlebest_d10)
ssw_singlebest~9:  r(ssw_singlebest_y9)
ssw_singlebest~9:  r(ssw_singlebest_d9)
ssw_singlebest~8:  r(ssw_singlebest_y8)
ssw_singlebest~8:  r(ssw_singlebest_d8)
ssw_singlebest~7:  r(ssw_singlebest_y7)
ssw_singlebest~7:  r(ssw_singlebest_d7)
ssw_singlebest~6:  r(ssw_singlebest_y6)
ssw_singlebest~6:  r(ssw_singlebest_d6)
ssw_singlebest~5:  r(ssw_singlebest_y5)
ssw_singlebest~5:  r(ssw_singlebest_d5)
ssw_singlebest~4:  r(ssw_singlebest_y4)
ssw_singlebest~4:  r(ssw_singlebest_d4)
ssw_singlebest~3:  r(ssw_singlebest_y3)
ssw_singlebest~3:  r(ssw_singlebest_d3)
ssw_singlebest~2:  r(ssw_singlebest_y2)
ssw_singlebest~2:  r(ssw_singlebest_d2)
ssw_singlebest~1:  r(ssw_singlebest_y1)
ssw_singlebest~1:  r(ssw_singlebest_d1)
stw_singlebes~14:  r(stw_singlebest_y14)
stw_singlebes~14:  r(stw_singlebest_d14)
stw_singlebes~13:  r(stw_singlebest_y13)
stw_singlebes~13:  r(stw_singlebest_d13)
stw_singlebes~12:  r(stw_singlebest_y12)
stw_singlebes~12:  r(stw_singlebest_d12)
stw_singlebes~11:  r(stw_singlebest_y11)
stw_singlebes~11:  r(stw_singlebest_d11)
stw_singlebes~10:  r(stw_singlebest_y10)
stw_singlebes~10:  r(stw_singlebest_d10)
stw_singlebest~9:  r(stw_singlebest_y9)
stw_singlebest~9:  r(stw_singlebest_d9)
stw_singlebest~8:  r(stw_singlebest_y8)
stw_singlebest~8:  r(stw_singlebest_d8)
stw_singlebest~7:  r(stw_singlebest_y7)
stw_singlebest~7:  r(stw_singlebest_d7)
stw_singlebest~6:  r(stw_singlebest_y6)
stw_singlebest~6:  r(stw_singlebest_d6)
stw_singlebest~5:  r(stw_singlebest_y5)
stw_singlebest~5:  r(stw_singlebest_d5)
stw_singlebest~4:  r(stw_singlebest_y4)
stw_singlebest~4:  r(stw_singlebest_d4)
stw_singlebest~3:  r(stw_singlebest_y3)
stw_singlebest~3:  r(stw_singlebest_d3)
stw_singlebest~2:  r(stw_singlebest_y2)
stw_singlebest~2:  r(stw_singlebest_d2)
stw_singlebest~1:  r(stw_singlebest_y1)
stw_singlebest~1:  r(stw_singlebest_d1)
   psw_nnls1_y14:  r(psw_nnls1_y14)
   psw_nnls1_d14:  r(psw_nnls1_d14)
   psw_nnls1_y13:  r(psw_nnls1_y13)
   psw_nnls1_d13:  r(psw_nnls1_d13)
   psw_nnls1_y12:  r(psw_nnls1_y12)
   psw_nnls1_d12:  r(psw_nnls1_d12)
   psw_nnls1_y11:  r(psw_nnls1_y11)
   psw_nnls1_d11:  r(psw_nnls1_d11)
   psw_nnls1_y10:  r(psw_nnls1_y10)
   psw_nnls1_d10:  r(psw_nnls1_d10)
    psw_nnls1_y9:  r(psw_nnls1_y9)
    psw_nnls1_d9:  r(psw_nnls1_d9)
    psw_nnls1_y8:  r(psw_nnls1_y8)
    psw_nnls1_d8:  r(psw_nnls1_d8)
    psw_nnls1_y7:  r(psw_nnls1_y7)
    psw_nnls1_d7:  r(psw_nnls1_d7)
    psw_nnls1_y6:  r(psw_nnls1_y6)
    psw_nnls1_d6:  r(psw_nnls1_d6)
    psw_nnls1_y5:  r(psw_nnls1_y5)
    psw_nnls1_d5:  r(psw_nnls1_d5)
    psw_nnls1_y4:  r(psw_nnls1_y4)
    psw_nnls1_d4:  r(psw_nnls1_d4)
    psw_nnls1_y3:  r(psw_nnls1_y3)
    psw_nnls1_d3:  r(psw_nnls1_d3)
    psw_nnls1_y2:  r(psw_nnls1_y2)
    psw_nnls1_d2:  r(psw_nnls1_d2)
    psw_nnls1_y1:  r(psw_nnls1_y1)
    psw_nnls1_d1:  r(psw_nnls1_d1)
   ssw_nnls1_y14:  r(ssw_nnls1_y14)
   ssw_nnls1_d14:  r(ssw_nnls1_d14)
   ssw_nnls1_y13:  r(ssw_nnls1_y13)
   ssw_nnls1_d13:  r(ssw_nnls1_d13)
   ssw_nnls1_y12:  r(ssw_nnls1_y12)
   ssw_nnls1_d12:  r(ssw_nnls1_d12)
   ssw_nnls1_y11:  r(ssw_nnls1_y11)
   ssw_nnls1_d11:  r(ssw_nnls1_d11)
   ssw_nnls1_y10:  r(ssw_nnls1_y10)
   ssw_nnls1_d10:  r(ssw_nnls1_d10)
    ssw_nnls1_y9:  r(ssw_nnls1_y9)
    ssw_nnls1_d9:  r(ssw_nnls1_d9)
    ssw_nnls1_y8:  r(ssw_nnls1_y8)
    ssw_nnls1_d8:  r(ssw_nnls1_d8)
    ssw_nnls1_y7:  r(ssw_nnls1_y7)
    ssw_nnls1_d7:  r(ssw_nnls1_d7)
    ssw_nnls1_y6:  r(ssw_nnls1_y6)
    ssw_nnls1_d6:  r(ssw_nnls1_d6)
    ssw_nnls1_y5:  r(ssw_nnls1_y5)
    ssw_nnls1_d5:  r(ssw_nnls1_d5)
    ssw_nnls1_y4:  r(ssw_nnls1_y4)
    ssw_nnls1_d4:  r(ssw_nnls1_d4)
    ssw_nnls1_y3:  r(ssw_nnls1_y3)
    ssw_nnls1_d3:  r(ssw_nnls1_d3)
    ssw_nnls1_y2:  r(ssw_nnls1_y2)
    ssw_nnls1_d2:  r(ssw_nnls1_d2)
    ssw_nnls1_y1:  r(ssw_nnls1_y1)
    ssw_nnls1_d1:  r(ssw_nnls1_d1)
   stw_nnls1_y14:  r(stw_nnls1_y14)
   stw_nnls1_d14:  r(stw_nnls1_d14)
   stw_nnls1_y13:  r(stw_nnls1_y13)
   stw_nnls1_d13:  r(stw_nnls1_d13)
   stw_nnls1_y12:  r(stw_nnls1_y12)
   stw_nnls1_d12:  r(stw_nnls1_d12)
   stw_nnls1_y11:  r(stw_nnls1_y11)
   stw_nnls1_d11:  r(stw_nnls1_d11)
   stw_nnls1_y10:  r(stw_nnls1_y10)
   stw_nnls1_d10:  r(stw_nnls1_d10)
    stw_nnls1_y9:  r(stw_nnls1_y9)
    stw_nnls1_d9:  r(stw_nnls1_d9)
    stw_nnls1_y8:  r(stw_nnls1_y8)
    stw_nnls1_d8:  r(stw_nnls1_d8)
    stw_nnls1_y7:  r(stw_nnls1_y7)
    stw_nnls1_d7:  r(stw_nnls1_d7)
    stw_nnls1_y6:  r(stw_nnls1_y6)
    stw_nnls1_d6:  r(stw_nnls1_d6)
    stw_nnls1_y5:  r(stw_nnls1_y5)
    stw_nnls1_d5:  r(stw_nnls1_d5)
    stw_nnls1_y4:  r(stw_nnls1_y4)
    stw_nnls1_d4:  r(stw_nnls1_d4)
    stw_nnls1_y3:  r(stw_nnls1_y3)
    stw_nnls1_d3:  r(stw_nnls1_d3)
    stw_nnls1_y2:  r(stw_nnls1_y2)
    stw_nnls1_d2:  r(stw_nnls1_d2)
    stw_nnls1_y1:  r(stw_nnls1_y1)
    stw_nnls1_d1:  r(stw_nnls1_d1)
    ddml_x_14_se:  r(ddml_x_14_se)
     ddml_x_14_b:  r(ddml_x_14_b)
    ddml_x_13_se:  r(ddml_x_13_se)
     ddml_x_13_b:  r(ddml_x_13_b)
    ddml_x_12_se:  r(ddml_x_12_se)
     ddml_x_12_b:  r(ddml_x_12_b)
    ddml_x_11_se:  r(ddml_x_11_se)
     ddml_x_11_b:  r(ddml_x_11_b)
    ddml_x_10_se:  r(ddml_x_10_se)
     ddml_x_10_b:  r(ddml_x_10_b)
     ddml_x_9_se:  r(ddml_x_9_se)
      ddml_x_9_b:  r(ddml_x_9_b)
     ddml_x_8_se:  r(ddml_x_8_se)
      ddml_x_8_b:  r(ddml_x_8_b)
     ddml_x_7_se:  r(ddml_x_7_se)
      ddml_x_7_b:  r(ddml_x_7_b)
     ddml_x_6_se:  r(ddml_x_6_se)
      ddml_x_6_b:  r(ddml_x_6_b)
     ddml_x_5_se:  r(ddml_x_5_se)
      ddml_x_5_b:  r(ddml_x_5_b)
     ddml_x_4_se:  r(ddml_x_4_se)
      ddml_x_4_b:  r(ddml_x_4_b)
     ddml_x_3_se:  r(ddml_x_3_se)
      ddml_x_3_b:  r(ddml_x_3_b)
     ddml_x_2_se:  r(ddml_x_2_se)
      ddml_x_2_b:  r(ddml_x_2_b)
     ddml_x_1_se:  r(ddml_x_1_se)
      ddml_x_1_b:  r(ddml_x_1_b)
ddml_ps_single~e:  r(ddml_ps_singlebest_se)
ddml_ps_single~b:  r(ddml_ps_singlebest_b)
ddml_ss_single~e:  r(ddml_ss_singlebest_se)
ddml_ss_single~b:  r(ddml_ss_singlebest_b)
ddml_st_single~e:  r(ddml_st_singlebest_se)
ddml_st_single~b:  r(ddml_st_singlebest_b)
ddml_ps_nnls1_se:  r(ddml_ps_nnls1_se)
 ddml_ps_nnls1_b:  r(ddml_ps_nnls1_b)
ddml_ss_nnls1_se:  r(ddml_ss_nnls1_se)
 ddml_ss_nnls1_b:  r(ddml_ss_nnls1_b)
ddml_st_nnls1_se:  r(ddml_st_nnls1_se)
 ddml_st_nnls1_b:  r(ddml_st_nnls1_b)

Simulations (10)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..........
(note: file out/out_5534_1000_4_5_6.dta not found)
file out/out_5534_1000_4_5_6.dta saved

         command:  mysim, obs(1000) dgp(4) folds(5)
           folds:  r(folds)
              rd:  r(rd)
              ry:  r(ry)
            beta:  r(beta)
            dgp0:  r(dgp0)
             dgp:  r(dgp)
               p:  r(p)
             obs:  r(obs)
         msped14:  r(msped14)
         mspey14:  r(mspey14)
         msped13:  r(msped13)
         mspey13:  r(mspey13)
         msped12:  r(msped12)
         mspey12:  r(mspey12)
         msped11:  r(msped11)
         mspey11:  r(mspey11)
         msped10:  r(msped10)
         mspey10:  r(mspey10)
          msped9:  r(msped9)
          mspey9:  r(mspey9)
          msped8:  r(msped8)
          mspey8:  r(mspey8)
          msped7:  r(msped7)
          mspey7:  r(mspey7)
          msped6:  r(msped6)
          mspey6:  r(mspey6)
          msped5:  r(msped5)
          mspey5:  r(mspey5)
          msped4:  r(msped4)
          mspey4:  r(mspey4)
          msped3:  r(msped3)
          mspey3:  r(mspey3)
          msped2:  r(msped2)
          mspey2:  r(mspey2)
          msped1:  r(msped1)
          mspey1:  r(mspey1)
         pds3_se:  r(pds3_se)
          pds3_b:  r(pds3_b)
         pds2_se:  r(pds2_se)
          pds2_b:  r(pds2_b)
          pds_se:  r(pds_se)
           pds_b:  r(pds_b)
          ols_se:  r(ols_se)
           ols_b:  r(ols_b)
       oracle_se:  r(oracle_se)
        oracle_b:  r(oracle_b)
psw_singlebes~14:  r(psw_singlebest_y14)
psw_singlebes~14:  r(psw_singlebest_d14)
psw_singlebes~13:  r(psw_singlebest_y13)
psw_singlebes~13:  r(psw_singlebest_d13)
psw_singlebes~12:  r(psw_singlebest_y12)
psw_singlebes~12:  r(psw_singlebest_d12)
psw_singlebes~11:  r(psw_singlebest_y11)
psw_singlebes~11:  r(psw_singlebest_d11)
psw_singlebes~10:  r(psw_singlebest_y10)
psw_singlebes~10:  r(psw_singlebest_d10)
psw_singlebest~9:  r(psw_singlebest_y9)
psw_singlebest~9:  r(psw_singlebest_d9)
psw_singlebest~8:  r(psw_singlebest_y8)
psw_singlebest~8:  r(psw_singlebest_d8)
psw_singlebest~7:  r(psw_singlebest_y7)
psw_singlebest~7:  r(psw_singlebest_d7)
psw_singlebest~6:  r(psw_singlebest_y6)
psw_singlebest~6:  r(psw_singlebest_d6)
psw_singlebest~5:  r(psw_singlebest_y5)
psw_singlebest~5:  r(psw_singlebest_d5)
psw_singlebest~4:  r(psw_singlebest_y4)
psw_singlebest~4:  r(psw_singlebest_d4)
psw_singlebest~3:  r(psw_singlebest_y3)
psw_singlebest~3:  r(psw_singlebest_d3)
psw_singlebest~2:  r(psw_singlebest_y2)
psw_singlebest~2:  r(psw_singlebest_d2)
psw_singlebest~1:  r(psw_singlebest_y1)
psw_singlebest~1:  r(psw_singlebest_d1)
ssw_singlebes~14:  r(ssw_singlebest_y14)
ssw_singlebes~14:  r(ssw_singlebest_d14)
ssw_singlebes~13:  r(ssw_singlebest_y13)
ssw_singlebes~13:  r(ssw_singlebest_d13)
ssw_singlebes~12:  r(ssw_singlebest_y12)
ssw_singlebes~12:  r(ssw_singlebest_d12)
ssw_singlebes~11:  r(ssw_singlebest_y11)
ssw_singlebes~11:  r(ssw_singlebest_d11)
ssw_singlebes~10:  r(ssw_singlebest_y10)
ssw_singlebes~10:  r(ssw_singlebest_d10)
ssw_singlebest~9:  r(ssw_singlebest_y9)
ssw_singlebest~9:  r(ssw_singlebest_d9)
ssw_singlebest~8:  r(ssw_singlebest_y8)
ssw_singlebest~8:  r(ssw_singlebest_d8)
ssw_singlebest~7:  r(ssw_singlebest_y7)
ssw_singlebest~7:  r(ssw_singlebest_d7)
ssw_singlebest~6:  r(ssw_singlebest_y6)
ssw_singlebest~6:  r(ssw_singlebest_d6)
ssw_singlebest~5:  r(ssw_singlebest_y5)
ssw_singlebest~5:  r(ssw_singlebest_d5)
ssw_singlebest~4:  r(ssw_singlebest_y4)
ssw_singlebest~4:  r(ssw_singlebest_d4)
ssw_singlebest~3:  r(ssw_singlebest_y3)
ssw_singlebest~3:  r(ssw_singlebest_d3)
ssw_singlebest~2:  r(ssw_singlebest_y2)
ssw_singlebest~2:  r(ssw_singlebest_d2)
ssw_singlebest~1:  r(ssw_singlebest_y1)
ssw_singlebest~1:  r(ssw_singlebest_d1)
stw_singlebes~14:  r(stw_singlebest_y14)
stw_singlebes~14:  r(stw_singlebest_d14)
stw_singlebes~13:  r(stw_singlebest_y13)
stw_singlebes~13:  r(stw_singlebest_d13)
stw_singlebes~12:  r(stw_singlebest_y12)
stw_singlebes~12:  r(stw_singlebest_d12)
stw_singlebes~11:  r(stw_singlebest_y11)
stw_singlebes~11:  r(stw_singlebest_d11)
stw_singlebes~10:  r(stw_singlebest_y10)
stw_singlebes~10:  r(stw_singlebest_d10)
stw_singlebest~9:  r(stw_singlebest_y9)
stw_singlebest~9:  r(stw_singlebest_d9)
stw_singlebest~8:  r(stw_singlebest_y8)
stw_singlebest~8:  r(stw_singlebest_d8)
stw_singlebest~7:  r(stw_singlebest_y7)
stw_singlebest~7:  r(stw_singlebest_d7)
stw_singlebest~6:  r(stw_singlebest_y6)
stw_singlebest~6:  r(stw_singlebest_d6)
stw_singlebest~5:  r(stw_singlebest_y5)
stw_singlebest~5:  r(stw_singlebest_d5)
stw_singlebest~4:  r(stw_singlebest_y4)
stw_singlebest~4:  r(stw_singlebest_d4)
stw_singlebest~3:  r(stw_singlebest_y3)
stw_singlebest~3:  r(stw_singlebest_d3)
stw_singlebest~2:  r(stw_singlebest_y2)
stw_singlebest~2:  r(stw_singlebest_d2)
stw_singlebest~1:  r(stw_singlebest_y1)
stw_singlebest~1:  r(stw_singlebest_d1)
   psw_nnls1_y14:  r(psw_nnls1_y14)
   psw_nnls1_d14:  r(psw_nnls1_d14)
   psw_nnls1_y13:  r(psw_nnls1_y13)
   psw_nnls1_d13:  r(psw_nnls1_d13)
   psw_nnls1_y12:  r(psw_nnls1_y12)
   psw_nnls1_d12:  r(psw_nnls1_d12)
   psw_nnls1_y11:  r(psw_nnls1_y11)
   psw_nnls1_d11:  r(psw_nnls1_d11)
   psw_nnls1_y10:  r(psw_nnls1_y10)
   psw_nnls1_d10:  r(psw_nnls1_d10)
    psw_nnls1_y9:  r(psw_nnls1_y9)
    psw_nnls1_d9:  r(psw_nnls1_d9)
    psw_nnls1_y8:  r(psw_nnls1_y8)
    psw_nnls1_d8:  r(psw_nnls1_d8)
    psw_nnls1_y7:  r(psw_nnls1_y7)
    psw_nnls1_d7:  r(psw_nnls1_d7)
    psw_nnls1_y6:  r(psw_nnls1_y6)
    psw_nnls1_d6:  r(psw_nnls1_d6)
    psw_nnls1_y5:  r(psw_nnls1_y5)
    psw_nnls1_d5:  r(psw_nnls1_d5)
    psw_nnls1_y4:  r(psw_nnls1_y4)
    psw_nnls1_d4:  r(psw_nnls1_d4)
    psw_nnls1_y3:  r(psw_nnls1_y3)
    psw_nnls1_d3:  r(psw_nnls1_d3)
    psw_nnls1_y2:  r(psw_nnls1_y2)
    psw_nnls1_d2:  r(psw_nnls1_d2)
    psw_nnls1_y1:  r(psw_nnls1_y1)
    psw_nnls1_d1:  r(psw_nnls1_d1)
   ssw_nnls1_y14:  r(ssw_nnls1_y14)
   ssw_nnls1_d14:  r(ssw_nnls1_d14)
   ssw_nnls1_y13:  r(ssw_nnls1_y13)
   ssw_nnls1_d13:  r(ssw_nnls1_d13)
   ssw_nnls1_y12:  r(ssw_nnls1_y12)
   ssw_nnls1_d12:  r(ssw_nnls1_d12)
   ssw_nnls1_y11:  r(ssw_nnls1_y11)
   ssw_nnls1_d11:  r(ssw_nnls1_d11)
   ssw_nnls1_y10:  r(ssw_nnls1_y10)
   ssw_nnls1_d10:  r(ssw_nnls1_d10)
    ssw_nnls1_y9:  r(ssw_nnls1_y9)
    ssw_nnls1_d9:  r(ssw_nnls1_d9)
    ssw_nnls1_y8:  r(ssw_nnls1_y8)
    ssw_nnls1_d8:  r(ssw_nnls1_d8)
    ssw_nnls1_y7:  r(ssw_nnls1_y7)
    ssw_nnls1_d7:  r(ssw_nnls1_d7)
    ssw_nnls1_y6:  r(ssw_nnls1_y6)
    ssw_nnls1_d6:  r(ssw_nnls1_d6)
    ssw_nnls1_y5:  r(ssw_nnls1_y5)
    ssw_nnls1_d5:  r(ssw_nnls1_d5)
    ssw_nnls1_y4:  r(ssw_nnls1_y4)
    ssw_nnls1_d4:  r(ssw_nnls1_d4)
    ssw_nnls1_y3:  r(ssw_nnls1_y3)
    ssw_nnls1_d3:  r(ssw_nnls1_d3)
    ssw_nnls1_y2:  r(ssw_nnls1_y2)
    ssw_nnls1_d2:  r(ssw_nnls1_d2)
    ssw_nnls1_y1:  r(ssw_nnls1_y1)
    ssw_nnls1_d1:  r(ssw_nnls1_d1)
   stw_nnls1_y14:  r(stw_nnls1_y14)
   stw_nnls1_d14:  r(stw_nnls1_d14)
   stw_nnls1_y13:  r(stw_nnls1_y13)
   stw_nnls1_d13:  r(stw_nnls1_d13)
   stw_nnls1_y12:  r(stw_nnls1_y12)
   stw_nnls1_d12:  r(stw_nnls1_d12)
   stw_nnls1_y11:  r(stw_nnls1_y11)
   stw_nnls1_d11:  r(stw_nnls1_d11)
   stw_nnls1_y10:  r(stw_nnls1_y10)
   stw_nnls1_d10:  r(stw_nnls1_d10)
    stw_nnls1_y9:  r(stw_nnls1_y9)
    stw_nnls1_d9:  r(stw_nnls1_d9)
    stw_nnls1_y8:  r(stw_nnls1_y8)
    stw_nnls1_d8:  r(stw_nnls1_d8)
    stw_nnls1_y7:  r(stw_nnls1_y7)
    stw_nnls1_d7:  r(stw_nnls1_d7)
    stw_nnls1_y6:  r(stw_nnls1_y6)
    stw_nnls1_d6:  r(stw_nnls1_d6)
    stw_nnls1_y5:  r(stw_nnls1_y5)
    stw_nnls1_d5:  r(stw_nnls1_d5)
    stw_nnls1_y4:  r(stw_nnls1_y4)
    stw_nnls1_d4:  r(stw_nnls1_d4)
    stw_nnls1_y3:  r(stw_nnls1_y3)
    stw_nnls1_d3:  r(stw_nnls1_d3)
    stw_nnls1_y2:  r(stw_nnls1_y2)
    stw_nnls1_d2:  r(stw_nnls1_d2)
    stw_nnls1_y1:  r(stw_nnls1_y1)
    stw_nnls1_d1:  r(stw_nnls1_d1)
    ddml_x_14_se:  r(ddml_x_14_se)
     ddml_x_14_b:  r(ddml_x_14_b)
    ddml_x_13_se:  r(ddml_x_13_se)
     ddml_x_13_b:  r(ddml_x_13_b)
    ddml_x_12_se:  r(ddml_x_12_se)
     ddml_x_12_b:  r(ddml_x_12_b)
    ddml_x_11_se:  r(ddml_x_11_se)
     ddml_x_11_b:  r(ddml_x_11_b)
    ddml_x_10_se:  r(ddml_x_10_se)
     ddml_x_10_b:  r(ddml_x_10_b)
     ddml_x_9_se:  r(ddml_x_9_se)
      ddml_x_9_b:  r(ddml_x_9_b)
     ddml_x_8_se:  r(ddml_x_8_se)
      ddml_x_8_b:  r(ddml_x_8_b)
     ddml_x_7_se:  r(ddml_x_7_se)
      ddml_x_7_b:  r(ddml_x_7_b)
     ddml_x_6_se:  r(ddml_x_6_se)
      ddml_x_6_b:  r(ddml_x_6_b)
     ddml_x_5_se:  r(ddml_x_5_se)
      ddml_x_5_b:  r(ddml_x_5_b)
     ddml_x_4_se:  r(ddml_x_4_se)
      ddml_x_4_b:  r(ddml_x_4_b)
     ddml_x_3_se:  r(ddml_x_3_se)
      ddml_x_3_b:  r(ddml_x_3_b)
     ddml_x_2_se:  r(ddml_x_2_se)
      ddml_x_2_b:  r(ddml_x_2_b)
     ddml_x_1_se:  r(ddml_x_1_se)
      ddml_x_1_b:  r(ddml_x_1_b)
ddml_ps_single~e:  r(ddml_ps_singlebest_se)
ddml_ps_single~b:  r(ddml_ps_singlebest_b)
ddml_ss_single~e:  r(ddml_ss_singlebest_se)
ddml_ss_single~b:  r(ddml_ss_singlebest_b)
ddml_st_single~e:  r(ddml_st_singlebest_se)
ddml_st_single~b:  r(ddml_st_singlebest_b)
ddml_ps_nnls1_se:  r(ddml_ps_nnls1_se)
 ddml_ps_nnls1_b:  r(ddml_ps_nnls1_b)
ddml_ss_nnls1_se:  r(ddml_ss_nnls1_se)
 ddml_ss_nnls1_b:  r(ddml_ss_nnls1_b)
ddml_st_nnls1_se:  r(ddml_st_nnls1_se)
 ddml_st_nnls1_b:  r(ddml_st_nnls1_b)

Simulations (10)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..........
(note: file out/out_5534_1000_4_5_7.dta not found)
file out/out_5534_1000_4_5_7.dta saved

         command:  mysim, obs(1000) dgp(4) folds(5)
           folds:  r(folds)
              rd:  r(rd)
              ry:  r(ry)
            beta:  r(beta)
            dgp0:  r(dgp0)
             dgp:  r(dgp)
               p:  r(p)
             obs:  r(obs)
         msped14:  r(msped14)
         mspey14:  r(mspey14)
         msped13:  r(msped13)
         mspey13:  r(mspey13)
         msped12:  r(msped12)
         mspey12:  r(mspey12)
         msped11:  r(msped11)
         mspey11:  r(mspey11)
         msped10:  r(msped10)
         mspey10:  r(mspey10)
          msped9:  r(msped9)
          mspey9:  r(mspey9)
          msped8:  r(msped8)
          mspey8:  r(mspey8)
          msped7:  r(msped7)
          mspey7:  r(mspey7)
          msped6:  r(msped6)
          mspey6:  r(mspey6)
          msped5:  r(msped5)
          mspey5:  r(mspey5)
          msped4:  r(msped4)
          mspey4:  r(mspey4)
          msped3:  r(msped3)
          mspey3:  r(mspey3)
          msped2:  r(msped2)
          mspey2:  r(mspey2)
          msped1:  r(msped1)
          mspey1:  r(mspey1)
         pds3_se:  r(pds3_se)
          pds3_b:  r(pds3_b)
         pds2_se:  r(pds2_se)
          pds2_b:  r(pds2_b)
          pds_se:  r(pds_se)
           pds_b:  r(pds_b)
          ols_se:  r(ols_se)
           ols_b:  r(ols_b)
       oracle_se:  r(oracle_se)
        oracle_b:  r(oracle_b)
psw_singlebes~14:  r(psw_singlebest_y14)
psw_singlebes~14:  r(psw_singlebest_d14)
psw_singlebes~13:  r(psw_singlebest_y13)
psw_singlebes~13:  r(psw_singlebest_d13)
psw_singlebes~12:  r(psw_singlebest_y12)
psw_singlebes~12:  r(psw_singlebest_d12)
psw_singlebes~11:  r(psw_singlebest_y11)
psw_singlebes~11:  r(psw_singlebest_d11)
psw_singlebes~10:  r(psw_singlebest_y10)
psw_singlebes~10:  r(psw_singlebest_d10)
psw_singlebest~9:  r(psw_singlebest_y9)
psw_singlebest~9:  r(psw_singlebest_d9)
psw_singlebest~8:  r(psw_singlebest_y8)
psw_singlebest~8:  r(psw_singlebest_d8)
psw_singlebest~7:  r(psw_singlebest_y7)
psw_singlebest~7:  r(psw_singlebest_d7)
psw_singlebest~6:  r(psw_singlebest_y6)
psw_singlebest~6:  r(psw_singlebest_d6)
psw_singlebest~5:  r(psw_singlebest_y5)
psw_singlebest~5:  r(psw_singlebest_d5)
psw_singlebest~4:  r(psw_singlebest_y4)
psw_singlebest~4:  r(psw_singlebest_d4)
psw_singlebest~3:  r(psw_singlebest_y3)
psw_singlebest~3:  r(psw_singlebest_d3)
psw_singlebest~2:  r(psw_singlebest_y2)
psw_singlebest~2:  r(psw_singlebest_d2)
psw_singlebest~1:  r(psw_singlebest_y1)
psw_singlebest~1:  r(psw_singlebest_d1)
ssw_singlebes~14:  r(ssw_singlebest_y14)
ssw_singlebes~14:  r(ssw_singlebest_d14)
ssw_singlebes~13:  r(ssw_singlebest_y13)
ssw_singlebes~13:  r(ssw_singlebest_d13)
ssw_singlebes~12:  r(ssw_singlebest_y12)
ssw_singlebes~12:  r(ssw_singlebest_d12)
ssw_singlebes~11:  r(ssw_singlebest_y11)
ssw_singlebes~11:  r(ssw_singlebest_d11)
ssw_singlebes~10:  r(ssw_singlebest_y10)
ssw_singlebes~10:  r(ssw_singlebest_d10)
ssw_singlebest~9:  r(ssw_singlebest_y9)
ssw_singlebest~9:  r(ssw_singlebest_d9)
ssw_singlebest~8:  r(ssw_singlebest_y8)
ssw_singlebest~8:  r(ssw_singlebest_d8)
ssw_singlebest~7:  r(ssw_singlebest_y7)
ssw_singlebest~7:  r(ssw_singlebest_d7)
ssw_singlebest~6:  r(ssw_singlebest_y6)
ssw_singlebest~6:  r(ssw_singlebest_d6)
ssw_singlebest~5:  r(ssw_singlebest_y5)
ssw_singlebest~5:  r(ssw_singlebest_d5)
ssw_singlebest~4:  r(ssw_singlebest_y4)
ssw_singlebest~4:  r(ssw_singlebest_d4)
ssw_singlebest~3:  r(ssw_singlebest_y3)
ssw_singlebest~3:  r(ssw_singlebest_d3)
ssw_singlebest~2:  r(ssw_singlebest_y2)
ssw_singlebest~2:  r(ssw_singlebest_d2)
ssw_singlebest~1:  r(ssw_singlebest_y1)
ssw_singlebest~1:  r(ssw_singlebest_d1)
stw_singlebes~14:  r(stw_singlebest_y14)
stw_singlebes~14:  r(stw_singlebest_d14)
stw_singlebes~13:  r(stw_singlebest_y13)
stw_singlebes~13:  r(stw_singlebest_d13)
stw_singlebes~12:  r(stw_singlebest_y12)
stw_singlebes~12:  r(stw_singlebest_d12)
stw_singlebes~11:  r(stw_singlebest_y11)
stw_singlebes~11:  r(stw_singlebest_d11)
stw_singlebes~10:  r(stw_singlebest_y10)
stw_singlebes~10:  r(stw_singlebest_d10)
stw_singlebest~9:  r(stw_singlebest_y9)
stw_singlebest~9:  r(stw_singlebest_d9)
stw_singlebest~8:  r(stw_singlebest_y8)
stw_singlebest~8:  r(stw_singlebest_d8)
stw_singlebest~7:  r(stw_singlebest_y7)
stw_singlebest~7:  r(stw_singlebest_d7)
stw_singlebest~6:  r(stw_singlebest_y6)
stw_singlebest~6:  r(stw_singlebest_d6)
stw_singlebest~5:  r(stw_singlebest_y5)
stw_singlebest~5:  r(stw_singlebest_d5)
stw_singlebest~4:  r(stw_singlebest_y4)
stw_singlebest~4:  r(stw_singlebest_d4)
stw_singlebest~3:  r(stw_singlebest_y3)
stw_singlebest~3:  r(stw_singlebest_d3)
stw_singlebest~2:  r(stw_singlebest_y2)
stw_singlebest~2:  r(stw_singlebest_d2)
stw_singlebest~1:  r(stw_singlebest_y1)
stw_singlebest~1:  r(stw_singlebest_d1)
   psw_nnls1_y14:  r(psw_nnls1_y14)
   psw_nnls1_d14:  r(psw_nnls1_d14)
   psw_nnls1_y13:  r(psw_nnls1_y13)
   psw_nnls1_d13:  r(psw_nnls1_d13)
   psw_nnls1_y12:  r(psw_nnls1_y12)
   psw_nnls1_d12:  r(psw_nnls1_d12)
   psw_nnls1_y11:  r(psw_nnls1_y11)
   psw_nnls1_d11:  r(psw_nnls1_d11)
   psw_nnls1_y10:  r(psw_nnls1_y10)
   psw_nnls1_d10:  r(psw_nnls1_d10)
    psw_nnls1_y9:  r(psw_nnls1_y9)
    psw_nnls1_d9:  r(psw_nnls1_d9)
    psw_nnls1_y8:  r(psw_nnls1_y8)
    psw_nnls1_d8:  r(psw_nnls1_d8)
    psw_nnls1_y7:  r(psw_nnls1_y7)
    psw_nnls1_d7:  r(psw_nnls1_d7)
    psw_nnls1_y6:  r(psw_nnls1_y6)
    psw_nnls1_d6:  r(psw_nnls1_d6)
    psw_nnls1_y5:  r(psw_nnls1_y5)
    psw_nnls1_d5:  r(psw_nnls1_d5)
    psw_nnls1_y4:  r(psw_nnls1_y4)
    psw_nnls1_d4:  r(psw_nnls1_d4)
    psw_nnls1_y3:  r(psw_nnls1_y3)
    psw_nnls1_d3:  r(psw_nnls1_d3)
    psw_nnls1_y2:  r(psw_nnls1_y2)
    psw_nnls1_d2:  r(psw_nnls1_d2)
    psw_nnls1_y1:  r(psw_nnls1_y1)
    psw_nnls1_d1:  r(psw_nnls1_d1)
   ssw_nnls1_y14:  r(ssw_nnls1_y14)
   ssw_nnls1_d14:  r(ssw_nnls1_d14)
   ssw_nnls1_y13:  r(ssw_nnls1_y13)
   ssw_nnls1_d13:  r(ssw_nnls1_d13)
   ssw_nnls1_y12:  r(ssw_nnls1_y12)
   ssw_nnls1_d12:  r(ssw_nnls1_d12)
   ssw_nnls1_y11:  r(ssw_nnls1_y11)
   ssw_nnls1_d11:  r(ssw_nnls1_d11)
   ssw_nnls1_y10:  r(ssw_nnls1_y10)
   ssw_nnls1_d10:  r(ssw_nnls1_d10)
    ssw_nnls1_y9:  r(ssw_nnls1_y9)
    ssw_nnls1_d9:  r(ssw_nnls1_d9)
    ssw_nnls1_y8:  r(ssw_nnls1_y8)
    ssw_nnls1_d8:  r(ssw_nnls1_d8)
    ssw_nnls1_y7:  r(ssw_nnls1_y7)
    ssw_nnls1_d7:  r(ssw_nnls1_d7)
    ssw_nnls1_y6:  r(ssw_nnls1_y6)
    ssw_nnls1_d6:  r(ssw_nnls1_d6)
    ssw_nnls1_y5:  r(ssw_nnls1_y5)
    ssw_nnls1_d5:  r(ssw_nnls1_d5)
    ssw_nnls1_y4:  r(ssw_nnls1_y4)
    ssw_nnls1_d4:  r(ssw_nnls1_d4)
    ssw_nnls1_y3:  r(ssw_nnls1_y3)
    ssw_nnls1_d3:  r(ssw_nnls1_d3)
    ssw_nnls1_y2:  r(ssw_nnls1_y2)
    ssw_nnls1_d2:  r(ssw_nnls1_d2)
    ssw_nnls1_y1:  r(ssw_nnls1_y1)
    ssw_nnls1_d1:  r(ssw_nnls1_d1)
   stw_nnls1_y14:  r(stw_nnls1_y14)
   stw_nnls1_d14:  r(stw_nnls1_d14)
   stw_nnls1_y13:  r(stw_nnls1_y13)
   stw_nnls1_d13:  r(stw_nnls1_d13)
   stw_nnls1_y12:  r(stw_nnls1_y12)
   stw_nnls1_d12:  r(stw_nnls1_d12)
   stw_nnls1_y11:  r(stw_nnls1_y11)
   stw_nnls1_d11:  r(stw_nnls1_d11)
   stw_nnls1_y10:  r(stw_nnls1_y10)
   stw_nnls1_d10:  r(stw_nnls1_d10)
    stw_nnls1_y9:  r(stw_nnls1_y9)
    stw_nnls1_d9:  r(stw_nnls1_d9)
    stw_nnls1_y8:  r(stw_nnls1_y8)
    stw_nnls1_d8:  r(stw_nnls1_d8)
    stw_nnls1_y7:  r(stw_nnls1_y7)
    stw_nnls1_d7:  r(stw_nnls1_d7)
    stw_nnls1_y6:  r(stw_nnls1_y6)
    stw_nnls1_d6:  r(stw_nnls1_d6)
    stw_nnls1_y5:  r(stw_nnls1_y5)
    stw_nnls1_d5:  r(stw_nnls1_d5)
    stw_nnls1_y4:  r(stw_nnls1_y4)
    stw_nnls1_d4:  r(stw_nnls1_d4)
    stw_nnls1_y3:  r(stw_nnls1_y3)
    stw_nnls1_d3:  r(stw_nnls1_d3)
    stw_nnls1_y2:  r(stw_nnls1_y2)
    stw_nnls1_d2:  r(stw_nnls1_d2)
    stw_nnls1_y1:  r(stw_nnls1_y1)
    stw_nnls1_d1:  r(stw_nnls1_d1)
    ddml_x_14_se:  r(ddml_x_14_se)
     ddml_x_14_b:  r(ddml_x_14_b)
    ddml_x_13_se:  r(ddml_x_13_se)
     ddml_x_13_b:  r(ddml_x_13_b)
    ddml_x_12_se:  r(ddml_x_12_se)
     ddml_x_12_b:  r(ddml_x_12_b)
    ddml_x_11_se:  r(ddml_x_11_se)
     ddml_x_11_b:  r(ddml_x_11_b)
    ddml_x_10_se:  r(ddml_x_10_se)
     ddml_x_10_b:  r(ddml_x_10_b)
     ddml_x_9_se:  r(ddml_x_9_se)
      ddml_x_9_b:  r(ddml_x_9_b)
     ddml_x_8_se:  r(ddml_x_8_se)
      ddml_x_8_b:  r(ddml_x_8_b)
     ddml_x_7_se:  r(ddml_x_7_se)
      ddml_x_7_b:  r(ddml_x_7_b)
     ddml_x_6_se:  r(ddml_x_6_se)
      ddml_x_6_b:  r(ddml_x_6_b)
     ddml_x_5_se:  r(ddml_x_5_se)
      ddml_x_5_b:  r(ddml_x_5_b)
     ddml_x_4_se:  r(ddml_x_4_se)
      ddml_x_4_b:  r(ddml_x_4_b)
     ddml_x_3_se:  r(ddml_x_3_se)
      ddml_x_3_b:  r(ddml_x_3_b)
     ddml_x_2_se:  r(ddml_x_2_se)
      ddml_x_2_b:  r(ddml_x_2_b)
     ddml_x_1_se:  r(ddml_x_1_se)
      ddml_x_1_b:  r(ddml_x_1_b)
ddml_ps_single~e:  r(ddml_ps_singlebest_se)
ddml_ps_single~b:  r(ddml_ps_singlebest_b)
ddml_ss_single~e:  r(ddml_ss_singlebest_se)
ddml_ss_single~b:  r(ddml_ss_singlebest_b)
ddml_st_single~e:  r(ddml_st_singlebest_se)
ddml_st_single~b:  r(ddml_st_singlebest_b)
ddml_ps_nnls1_se:  r(ddml_ps_nnls1_se)
 ddml_ps_nnls1_b:  r(ddml_ps_nnls1_b)
ddml_ss_nnls1_se:  r(ddml_ss_nnls1_se)
 ddml_ss_nnls1_b:  r(ddml_ss_nnls1_b)
ddml_st_nnls1_se:  r(ddml_st_nnls1_se)
 ddml_st_nnls1_b:  r(ddml_st_nnls1_b)

Simulations (10)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..........
(note: file out/out_5534_1000_4_5_8.dta not found)
file out/out_5534_1000_4_5_8.dta saved

         command:  mysim, obs(1000) dgp(4) folds(5)
           folds:  r(folds)
              rd:  r(rd)
              ry:  r(ry)
            beta:  r(beta)
            dgp0:  r(dgp0)
             dgp:  r(dgp)
               p:  r(p)
             obs:  r(obs)
         msped14:  r(msped14)
         mspey14:  r(mspey14)
         msped13:  r(msped13)
         mspey13:  r(mspey13)
         msped12:  r(msped12)
         mspey12:  r(mspey12)
         msped11:  r(msped11)
         mspey11:  r(mspey11)
         msped10:  r(msped10)
         mspey10:  r(mspey10)
          msped9:  r(msped9)
          mspey9:  r(mspey9)
          msped8:  r(msped8)
          mspey8:  r(mspey8)
          msped7:  r(msped7)
          mspey7:  r(mspey7)
          msped6:  r(msped6)
          mspey6:  r(mspey6)
          msped5:  r(msped5)
          mspey5:  r(mspey5)
          msped4:  r(msped4)
          mspey4:  r(mspey4)
          msped3:  r(msped3)
          mspey3:  r(mspey3)
          msped2:  r(msped2)
          mspey2:  r(mspey2)
          msped1:  r(msped1)
          mspey1:  r(mspey1)
         pds3_se:  r(pds3_se)
          pds3_b:  r(pds3_b)
         pds2_se:  r(pds2_se)
          pds2_b:  r(pds2_b)
          pds_se:  r(pds_se)
           pds_b:  r(pds_b)
          ols_se:  r(ols_se)
           ols_b:  r(ols_b)
       oracle_se:  r(oracle_se)
        oracle_b:  r(oracle_b)
psw_singlebes~14:  r(psw_singlebest_y14)
psw_singlebes~14:  r(psw_singlebest_d14)
psw_singlebes~13:  r(psw_singlebest_y13)
psw_singlebes~13:  r(psw_singlebest_d13)
psw_singlebes~12:  r(psw_singlebest_y12)
psw_singlebes~12:  r(psw_singlebest_d12)
psw_singlebes~11:  r(psw_singlebest_y11)
psw_singlebes~11:  r(psw_singlebest_d11)
psw_singlebes~10:  r(psw_singlebest_y10)
psw_singlebes~10:  r(psw_singlebest_d10)
psw_singlebest~9:  r(psw_singlebest_y9)
psw_singlebest~9:  r(psw_singlebest_d9)
psw_singlebest~8:  r(psw_singlebest_y8)
psw_singlebest~8:  r(psw_singlebest_d8)
psw_singlebest~7:  r(psw_singlebest_y7)
psw_singlebest~7:  r(psw_singlebest_d7)
psw_singlebest~6:  r(psw_singlebest_y6)
psw_singlebest~6:  r(psw_singlebest_d6)
psw_singlebest~5:  r(psw_singlebest_y5)
psw_singlebest~5:  r(psw_singlebest_d5)
psw_singlebest~4:  r(psw_singlebest_y4)
psw_singlebest~4:  r(psw_singlebest_d4)
psw_singlebest~3:  r(psw_singlebest_y3)
psw_singlebest~3:  r(psw_singlebest_d3)
psw_singlebest~2:  r(psw_singlebest_y2)
psw_singlebest~2:  r(psw_singlebest_d2)
psw_singlebest~1:  r(psw_singlebest_y1)
psw_singlebest~1:  r(psw_singlebest_d1)
ssw_singlebes~14:  r(ssw_singlebest_y14)
ssw_singlebes~14:  r(ssw_singlebest_d14)
ssw_singlebes~13:  r(ssw_singlebest_y13)
ssw_singlebes~13:  r(ssw_singlebest_d13)
ssw_singlebes~12:  r(ssw_singlebest_y12)
ssw_singlebes~12:  r(ssw_singlebest_d12)
ssw_singlebes~11:  r(ssw_singlebest_y11)
ssw_singlebes~11:  r(ssw_singlebest_d11)
ssw_singlebes~10:  r(ssw_singlebest_y10)
ssw_singlebes~10:  r(ssw_singlebest_d10)
ssw_singlebest~9:  r(ssw_singlebest_y9)
ssw_singlebest~9:  r(ssw_singlebest_d9)
ssw_singlebest~8:  r(ssw_singlebest_y8)
ssw_singlebest~8:  r(ssw_singlebest_d8)
ssw_singlebest~7:  r(ssw_singlebest_y7)
ssw_singlebest~7:  r(ssw_singlebest_d7)
ssw_singlebest~6:  r(ssw_singlebest_y6)
ssw_singlebest~6:  r(ssw_singlebest_d6)
ssw_singlebest~5:  r(ssw_singlebest_y5)
ssw_singlebest~5:  r(ssw_singlebest_d5)
ssw_singlebest~4:  r(ssw_singlebest_y4)
ssw_singlebest~4:  r(ssw_singlebest_d4)
ssw_singlebest~3:  r(ssw_singlebest_y3)
ssw_singlebest~3:  r(ssw_singlebest_d3)
ssw_singlebest~2:  r(ssw_singlebest_y2)
ssw_singlebest~2:  r(ssw_singlebest_d2)
ssw_singlebest~1:  r(ssw_singlebest_y1)
ssw_singlebest~1:  r(ssw_singlebest_d1)
stw_singlebes~14:  r(stw_singlebest_y14)
stw_singlebes~14:  r(stw_singlebest_d14)
stw_singlebes~13:  r(stw_singlebest_y13)
stw_singlebes~13:  r(stw_singlebest_d13)
stw_singlebes~12:  r(stw_singlebest_y12)
stw_singlebes~12:  r(stw_singlebest_d12)
stw_singlebes~11:  r(stw_singlebest_y11)
stw_singlebes~11:  r(stw_singlebest_d11)
stw_singlebes~10:  r(stw_singlebest_y10)
stw_singlebes~10:  r(stw_singlebest_d10)
stw_singlebest~9:  r(stw_singlebest_y9)
stw_singlebest~9:  r(stw_singlebest_d9)
stw_singlebest~8:  r(stw_singlebest_y8)
stw_singlebest~8:  r(stw_singlebest_d8)
stw_singlebest~7:  r(stw_singlebest_y7)
stw_singlebest~7:  r(stw_singlebest_d7)
stw_singlebest~6:  r(stw_singlebest_y6)
stw_singlebest~6:  r(stw_singlebest_d6)
stw_singlebest~5:  r(stw_singlebest_y5)
stw_singlebest~5:  r(stw_singlebest_d5)
stw_singlebest~4:  r(stw_singlebest_y4)
stw_singlebest~4:  r(stw_singlebest_d4)
stw_singlebest~3:  r(stw_singlebest_y3)
stw_singlebest~3:  r(stw_singlebest_d3)
stw_singlebest~2:  r(stw_singlebest_y2)
stw_singlebest~2:  r(stw_singlebest_d2)
stw_singlebest~1:  r(stw_singlebest_y1)
stw_singlebest~1:  r(stw_singlebest_d1)
   psw_nnls1_y14:  r(psw_nnls1_y14)
   psw_nnls1_d14:  r(psw_nnls1_d14)
   psw_nnls1_y13:  r(psw_nnls1_y13)
   psw_nnls1_d13:  r(psw_nnls1_d13)
   psw_nnls1_y12:  r(psw_nnls1_y12)
   psw_nnls1_d12:  r(psw_nnls1_d12)
   psw_nnls1_y11:  r(psw_nnls1_y11)
   psw_nnls1_d11:  r(psw_nnls1_d11)
   psw_nnls1_y10:  r(psw_nnls1_y10)
   psw_nnls1_d10:  r(psw_nnls1_d10)
    psw_nnls1_y9:  r(psw_nnls1_y9)
    psw_nnls1_d9:  r(psw_nnls1_d9)
    psw_nnls1_y8:  r(psw_nnls1_y8)
    psw_nnls1_d8:  r(psw_nnls1_d8)
    psw_nnls1_y7:  r(psw_nnls1_y7)
    psw_nnls1_d7:  r(psw_nnls1_d7)
    psw_nnls1_y6:  r(psw_nnls1_y6)
    psw_nnls1_d6:  r(psw_nnls1_d6)
    psw_nnls1_y5:  r(psw_nnls1_y5)
    psw_nnls1_d5:  r(psw_nnls1_d5)
    psw_nnls1_y4:  r(psw_nnls1_y4)
    psw_nnls1_d4:  r(psw_nnls1_d4)
    psw_nnls1_y3:  r(psw_nnls1_y3)
    psw_nnls1_d3:  r(psw_nnls1_d3)
    psw_nnls1_y2:  r(psw_nnls1_y2)
    psw_nnls1_d2:  r(psw_nnls1_d2)
    psw_nnls1_y1:  r(psw_nnls1_y1)
    psw_nnls1_d1:  r(psw_nnls1_d1)
   ssw_nnls1_y14:  r(ssw_nnls1_y14)
   ssw_nnls1_d14:  r(ssw_nnls1_d14)
   ssw_nnls1_y13:  r(ssw_nnls1_y13)
   ssw_nnls1_d13:  r(ssw_nnls1_d13)
   ssw_nnls1_y12:  r(ssw_nnls1_y12)
   ssw_nnls1_d12:  r(ssw_nnls1_d12)
   ssw_nnls1_y11:  r(ssw_nnls1_y11)
   ssw_nnls1_d11:  r(ssw_nnls1_d11)
   ssw_nnls1_y10:  r(ssw_nnls1_y10)
   ssw_nnls1_d10:  r(ssw_nnls1_d10)
    ssw_nnls1_y9:  r(ssw_nnls1_y9)
    ssw_nnls1_d9:  r(ssw_nnls1_d9)
    ssw_nnls1_y8:  r(ssw_nnls1_y8)
    ssw_nnls1_d8:  r(ssw_nnls1_d8)
    ssw_nnls1_y7:  r(ssw_nnls1_y7)
    ssw_nnls1_d7:  r(ssw_nnls1_d7)
    ssw_nnls1_y6:  r(ssw_nnls1_y6)
    ssw_nnls1_d6:  r(ssw_nnls1_d6)
    ssw_nnls1_y5:  r(ssw_nnls1_y5)
    ssw_nnls1_d5:  r(ssw_nnls1_d5)
    ssw_nnls1_y4:  r(ssw_nnls1_y4)
    ssw_nnls1_d4:  r(ssw_nnls1_d4)
    ssw_nnls1_y3:  r(ssw_nnls1_y3)
    ssw_nnls1_d3:  r(ssw_nnls1_d3)
    ssw_nnls1_y2:  r(ssw_nnls1_y2)
    ssw_nnls1_d2:  r(ssw_nnls1_d2)
    ssw_nnls1_y1:  r(ssw_nnls1_y1)
    ssw_nnls1_d1:  r(ssw_nnls1_d1)
   stw_nnls1_y14:  r(stw_nnls1_y14)
   stw_nnls1_d14:  r(stw_nnls1_d14)
   stw_nnls1_y13:  r(stw_nnls1_y13)
   stw_nnls1_d13:  r(stw_nnls1_d13)
   stw_nnls1_y12:  r(stw_nnls1_y12)
   stw_nnls1_d12:  r(stw_nnls1_d12)
   stw_nnls1_y11:  r(stw_nnls1_y11)
   stw_nnls1_d11:  r(stw_nnls1_d11)
   stw_nnls1_y10:  r(stw_nnls1_y10)
   stw_nnls1_d10:  r(stw_nnls1_d10)
    stw_nnls1_y9:  r(stw_nnls1_y9)
    stw_nnls1_d9:  r(stw_nnls1_d9)
    stw_nnls1_y8:  r(stw_nnls1_y8)
    stw_nnls1_d8:  r(stw_nnls1_d8)
    stw_nnls1_y7:  r(stw_nnls1_y7)
    stw_nnls1_d7:  r(stw_nnls1_d7)
    stw_nnls1_y6:  r(stw_nnls1_y6)
    stw_nnls1_d6:  r(stw_nnls1_d6)
    stw_nnls1_y5:  r(stw_nnls1_y5)
    stw_nnls1_d5:  r(stw_nnls1_d5)
    stw_nnls1_y4:  r(stw_nnls1_y4)
    stw_nnls1_d4:  r(stw_nnls1_d4)
    stw_nnls1_y3:  r(stw_nnls1_y3)
    stw_nnls1_d3:  r(stw_nnls1_d3)
    stw_nnls1_y2:  r(stw_nnls1_y2)
    stw_nnls1_d2:  r(stw_nnls1_d2)
    stw_nnls1_y1:  r(stw_nnls1_y1)
    stw_nnls1_d1:  r(stw_nnls1_d1)
    ddml_x_14_se:  r(ddml_x_14_se)
     ddml_x_14_b:  r(ddml_x_14_b)
    ddml_x_13_se:  r(ddml_x_13_se)
     ddml_x_13_b:  r(ddml_x_13_b)
    ddml_x_12_se:  r(ddml_x_12_se)
     ddml_x_12_b:  r(ddml_x_12_b)
    ddml_x_11_se:  r(ddml_x_11_se)
     ddml_x_11_b:  r(ddml_x_11_b)
    ddml_x_10_se:  r(ddml_x_10_se)
     ddml_x_10_b:  r(ddml_x_10_b)
     ddml_x_9_se:  r(ddml_x_9_se)
      ddml_x_9_b:  r(ddml_x_9_b)
     ddml_x_8_se:  r(ddml_x_8_se)
      ddml_x_8_b:  r(ddml_x_8_b)
     ddml_x_7_se:  r(ddml_x_7_se)
      ddml_x_7_b:  r(ddml_x_7_b)
     ddml_x_6_se:  r(ddml_x_6_se)
      ddml_x_6_b:  r(ddml_x_6_b)
     ddml_x_5_se:  r(ddml_x_5_se)
      ddml_x_5_b:  r(ddml_x_5_b)
     ddml_x_4_se:  r(ddml_x_4_se)
      ddml_x_4_b:  r(ddml_x_4_b)
     ddml_x_3_se:  r(ddml_x_3_se)
      ddml_x_3_b:  r(ddml_x_3_b)
     ddml_x_2_se:  r(ddml_x_2_se)
      ddml_x_2_b:  r(ddml_x_2_b)
     ddml_x_1_se:  r(ddml_x_1_se)
      ddml_x_1_b:  r(ddml_x_1_b)
ddml_ps_single~e:  r(ddml_ps_singlebest_se)
ddml_ps_single~b:  r(ddml_ps_singlebest_b)
ddml_ss_single~e:  r(ddml_ss_singlebest_se)
ddml_ss_single~b:  r(ddml_ss_singlebest_b)
ddml_st_single~e:  r(ddml_st_singlebest_se)
ddml_st_single~b:  r(ddml_st_singlebest_b)
ddml_ps_nnls1_se:  r(ddml_ps_nnls1_se)
 ddml_ps_nnls1_b:  r(ddml_ps_nnls1_b)
ddml_ss_nnls1_se:  r(ddml_ss_nnls1_se)
 ddml_ss_nnls1_b:  r(ddml_ss_nnls1_b)
ddml_st_nnls1_se:  r(ddml_st_nnls1_se)
 ddml_st_nnls1_b:  r(ddml_st_nnls1_b)

Simulations (10)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..........
(note: file out/out_5534_1000_4_5_9.dta not found)
file out/out_5534_1000_4_5_9.dta saved

         command:  mysim, obs(1000) dgp(4) folds(5)
           folds:  r(folds)
              rd:  r(rd)
              ry:  r(ry)
            beta:  r(beta)
            dgp0:  r(dgp0)
             dgp:  r(dgp)
               p:  r(p)
             obs:  r(obs)
         msped14:  r(msped14)
         mspey14:  r(mspey14)
         msped13:  r(msped13)
         mspey13:  r(mspey13)
         msped12:  r(msped12)
         mspey12:  r(mspey12)
         msped11:  r(msped11)
         mspey11:  r(mspey11)
         msped10:  r(msped10)
         mspey10:  r(mspey10)
          msped9:  r(msped9)
          mspey9:  r(mspey9)
          msped8:  r(msped8)
          mspey8:  r(mspey8)
          msped7:  r(msped7)
          mspey7:  r(mspey7)
          msped6:  r(msped6)
          mspey6:  r(mspey6)
          msped5:  r(msped5)
          mspey5:  r(mspey5)
          msped4:  r(msped4)
          mspey4:  r(mspey4)
          msped3:  r(msped3)
          mspey3:  r(mspey3)
          msped2:  r(msped2)
          mspey2:  r(mspey2)
          msped1:  r(msped1)
          mspey1:  r(mspey1)
         pds3_se:  r(pds3_se)
          pds3_b:  r(pds3_b)
         pds2_se:  r(pds2_se)
          pds2_b:  r(pds2_b)
          pds_se:  r(pds_se)
           pds_b:  r(pds_b)
          ols_se:  r(ols_se)
           ols_b:  r(ols_b)
       oracle_se:  r(oracle_se)
        oracle_b:  r(oracle_b)
psw_singlebes~14:  r(psw_singlebest_y14)
psw_singlebes~14:  r(psw_singlebest_d14)
psw_singlebes~13:  r(psw_singlebest_y13)
psw_singlebes~13:  r(psw_singlebest_d13)
psw_singlebes~12:  r(psw_singlebest_y12)
psw_singlebes~12:  r(psw_singlebest_d12)
psw_singlebes~11:  r(psw_singlebest_y11)
psw_singlebes~11:  r(psw_singlebest_d11)
psw_singlebes~10:  r(psw_singlebest_y10)
psw_singlebes~10:  r(psw_singlebest_d10)
psw_singlebest~9:  r(psw_singlebest_y9)
psw_singlebest~9:  r(psw_singlebest_d9)
psw_singlebest~8:  r(psw_singlebest_y8)
psw_singlebest~8:  r(psw_singlebest_d8)
psw_singlebest~7:  r(psw_singlebest_y7)
psw_singlebest~7:  r(psw_singlebest_d7)
psw_singlebest~6:  r(psw_singlebest_y6)
psw_singlebest~6:  r(psw_singlebest_d6)
psw_singlebest~5:  r(psw_singlebest_y5)
psw_singlebest~5:  r(psw_singlebest_d5)
psw_singlebest~4:  r(psw_singlebest_y4)
psw_singlebest~4:  r(psw_singlebest_d4)
psw_singlebest~3:  r(psw_singlebest_y3)
psw_singlebest~3:  r(psw_singlebest_d3)
psw_singlebest~2:  r(psw_singlebest_y2)
psw_singlebest~2:  r(psw_singlebest_d2)
psw_singlebest~1:  r(psw_singlebest_y1)
psw_singlebest~1:  r(psw_singlebest_d1)
ssw_singlebes~14:  r(ssw_singlebest_y14)
ssw_singlebes~14:  r(ssw_singlebest_d14)
ssw_singlebes~13:  r(ssw_singlebest_y13)
ssw_singlebes~13:  r(ssw_singlebest_d13)
ssw_singlebes~12:  r(ssw_singlebest_y12)
ssw_singlebes~12:  r(ssw_singlebest_d12)
ssw_singlebes~11:  r(ssw_singlebest_y11)
ssw_singlebes~11:  r(ssw_singlebest_d11)
ssw_singlebes~10:  r(ssw_singlebest_y10)
ssw_singlebes~10:  r(ssw_singlebest_d10)
ssw_singlebest~9:  r(ssw_singlebest_y9)
ssw_singlebest~9:  r(ssw_singlebest_d9)
ssw_singlebest~8:  r(ssw_singlebest_y8)
ssw_singlebest~8:  r(ssw_singlebest_d8)
ssw_singlebest~7:  r(ssw_singlebest_y7)
ssw_singlebest~7:  r(ssw_singlebest_d7)
ssw_singlebest~6:  r(ssw_singlebest_y6)
ssw_singlebest~6:  r(ssw_singlebest_d6)
ssw_singlebest~5:  r(ssw_singlebest_y5)
ssw_singlebest~5:  r(ssw_singlebest_d5)
ssw_singlebest~4:  r(ssw_singlebest_y4)
ssw_singlebest~4:  r(ssw_singlebest_d4)
ssw_singlebest~3:  r(ssw_singlebest_y3)
ssw_singlebest~3:  r(ssw_singlebest_d3)
ssw_singlebest~2:  r(ssw_singlebest_y2)
ssw_singlebest~2:  r(ssw_singlebest_d2)
ssw_singlebest~1:  r(ssw_singlebest_y1)
ssw_singlebest~1:  r(ssw_singlebest_d1)
stw_singlebes~14:  r(stw_singlebest_y14)
stw_singlebes~14:  r(stw_singlebest_d14)
stw_singlebes~13:  r(stw_singlebest_y13)
stw_singlebes~13:  r(stw_singlebest_d13)
stw_singlebes~12:  r(stw_singlebest_y12)
stw_singlebes~12:  r(stw_singlebest_d12)
stw_singlebes~11:  r(stw_singlebest_y11)
stw_singlebes~11:  r(stw_singlebest_d11)
stw_singlebes~10:  r(stw_singlebest_y10)
stw_singlebes~10:  r(stw_singlebest_d10)
stw_singlebest~9:  r(stw_singlebest_y9)
stw_singlebest~9:  r(stw_singlebest_d9)
stw_singlebest~8:  r(stw_singlebest_y8)
stw_singlebest~8:  r(stw_singlebest_d8)
stw_singlebest~7:  r(stw_singlebest_y7)
stw_singlebest~7:  r(stw_singlebest_d7)
stw_singlebest~6:  r(stw_singlebest_y6)
stw_singlebest~6:  r(stw_singlebest_d6)
stw_singlebest~5:  r(stw_singlebest_y5)
stw_singlebest~5:  r(stw_singlebest_d5)
stw_singlebest~4:  r(stw_singlebest_y4)
stw_singlebest~4:  r(stw_singlebest_d4)
stw_singlebest~3:  r(stw_singlebest_y3)
stw_singlebest~3:  r(stw_singlebest_d3)
stw_singlebest~2:  r(stw_singlebest_y2)
stw_singlebest~2:  r(stw_singlebest_d2)
stw_singlebest~1:  r(stw_singlebest_y1)
stw_singlebest~1:  r(stw_singlebest_d1)
   psw_nnls1_y14:  r(psw_nnls1_y14)
   psw_nnls1_d14:  r(psw_nnls1_d14)
   psw_nnls1_y13:  r(psw_nnls1_y13)
   psw_nnls1_d13:  r(psw_nnls1_d13)
   psw_nnls1_y12:  r(psw_nnls1_y12)
   psw_nnls1_d12:  r(psw_nnls1_d12)
   psw_nnls1_y11:  r(psw_nnls1_y11)
   psw_nnls1_d11:  r(psw_nnls1_d11)
   psw_nnls1_y10:  r(psw_nnls1_y10)
   psw_nnls1_d10:  r(psw_nnls1_d10)
    psw_nnls1_y9:  r(psw_nnls1_y9)
    psw_nnls1_d9:  r(psw_nnls1_d9)
    psw_nnls1_y8:  r(psw_nnls1_y8)
    psw_nnls1_d8:  r(psw_nnls1_d8)
    psw_nnls1_y7:  r(psw_nnls1_y7)
    psw_nnls1_d7:  r(psw_nnls1_d7)
    psw_nnls1_y6:  r(psw_nnls1_y6)
    psw_nnls1_d6:  r(psw_nnls1_d6)
    psw_nnls1_y5:  r(psw_nnls1_y5)
    psw_nnls1_d5:  r(psw_nnls1_d5)
    psw_nnls1_y4:  r(psw_nnls1_y4)
    psw_nnls1_d4:  r(psw_nnls1_d4)
    psw_nnls1_y3:  r(psw_nnls1_y3)
    psw_nnls1_d3:  r(psw_nnls1_d3)
    psw_nnls1_y2:  r(psw_nnls1_y2)
    psw_nnls1_d2:  r(psw_nnls1_d2)
    psw_nnls1_y1:  r(psw_nnls1_y1)
    psw_nnls1_d1:  r(psw_nnls1_d1)
   ssw_nnls1_y14:  r(ssw_nnls1_y14)
   ssw_nnls1_d14:  r(ssw_nnls1_d14)
   ssw_nnls1_y13:  r(ssw_nnls1_y13)
   ssw_nnls1_d13:  r(ssw_nnls1_d13)
   ssw_nnls1_y12:  r(ssw_nnls1_y12)
   ssw_nnls1_d12:  r(ssw_nnls1_d12)
   ssw_nnls1_y11:  r(ssw_nnls1_y11)
   ssw_nnls1_d11:  r(ssw_nnls1_d11)
   ssw_nnls1_y10:  r(ssw_nnls1_y10)
   ssw_nnls1_d10:  r(ssw_nnls1_d10)
    ssw_nnls1_y9:  r(ssw_nnls1_y9)
    ssw_nnls1_d9:  r(ssw_nnls1_d9)
    ssw_nnls1_y8:  r(ssw_nnls1_y8)
    ssw_nnls1_d8:  r(ssw_nnls1_d8)
    ssw_nnls1_y7:  r(ssw_nnls1_y7)
    ssw_nnls1_d7:  r(ssw_nnls1_d7)
    ssw_nnls1_y6:  r(ssw_nnls1_y6)
    ssw_nnls1_d6:  r(ssw_nnls1_d6)
    ssw_nnls1_y5:  r(ssw_nnls1_y5)
    ssw_nnls1_d5:  r(ssw_nnls1_d5)
    ssw_nnls1_y4:  r(ssw_nnls1_y4)
    ssw_nnls1_d4:  r(ssw_nnls1_d4)
    ssw_nnls1_y3:  r(ssw_nnls1_y3)
    ssw_nnls1_d3:  r(ssw_nnls1_d3)
    ssw_nnls1_y2:  r(ssw_nnls1_y2)
    ssw_nnls1_d2:  r(ssw_nnls1_d2)
    ssw_nnls1_y1:  r(ssw_nnls1_y1)
    ssw_nnls1_d1:  r(ssw_nnls1_d1)
   stw_nnls1_y14:  r(stw_nnls1_y14)
   stw_nnls1_d14:  r(stw_nnls1_d14)
   stw_nnls1_y13:  r(stw_nnls1_y13)
   stw_nnls1_d13:  r(stw_nnls1_d13)
   stw_nnls1_y12:  r(stw_nnls1_y12)
   stw_nnls1_d12:  r(stw_nnls1_d12)
   stw_nnls1_y11:  r(stw_nnls1_y11)
   stw_nnls1_d11:  r(stw_nnls1_d11)
   stw_nnls1_y10:  r(stw_nnls1_y10)
   stw_nnls1_d10:  r(stw_nnls1_d10)
    stw_nnls1_y9:  r(stw_nnls1_y9)
    stw_nnls1_d9:  r(stw_nnls1_d9)
    stw_nnls1_y8:  r(stw_nnls1_y8)
    stw_nnls1_d8:  r(stw_nnls1_d8)
    stw_nnls1_y7:  r(stw_nnls1_y7)
    stw_nnls1_d7:  r(stw_nnls1_d7)
    stw_nnls1_y6:  r(stw_nnls1_y6)
    stw_nnls1_d6:  r(stw_nnls1_d6)
    stw_nnls1_y5:  r(stw_nnls1_y5)
    stw_nnls1_d5:  r(stw_nnls1_d5)
    stw_nnls1_y4:  r(stw_nnls1_y4)
    stw_nnls1_d4:  r(stw_nnls1_d4)
    stw_nnls1_y3:  r(stw_nnls1_y3)
    stw_nnls1_d3:  r(stw_nnls1_d3)
    stw_nnls1_y2:  r(stw_nnls1_y2)
    stw_nnls1_d2:  r(stw_nnls1_d2)
    stw_nnls1_y1:  r(stw_nnls1_y1)
    stw_nnls1_d1:  r(stw_nnls1_d1)
    ddml_x_14_se:  r(ddml_x_14_se)
     ddml_x_14_b:  r(ddml_x_14_b)
    ddml_x_13_se:  r(ddml_x_13_se)
     ddml_x_13_b:  r(ddml_x_13_b)
    ddml_x_12_se:  r(ddml_x_12_se)
     ddml_x_12_b:  r(ddml_x_12_b)
    ddml_x_11_se:  r(ddml_x_11_se)
     ddml_x_11_b:  r(ddml_x_11_b)
    ddml_x_10_se:  r(ddml_x_10_se)
     ddml_x_10_b:  r(ddml_x_10_b)
     ddml_x_9_se:  r(ddml_x_9_se)
      ddml_x_9_b:  r(ddml_x_9_b)
     ddml_x_8_se:  r(ddml_x_8_se)
      ddml_x_8_b:  r(ddml_x_8_b)
     ddml_x_7_se:  r(ddml_x_7_se)
      ddml_x_7_b:  r(ddml_x_7_b)
     ddml_x_6_se:  r(ddml_x_6_se)
      ddml_x_6_b:  r(ddml_x_6_b)
     ddml_x_5_se:  r(ddml_x_5_se)
      ddml_x_5_b:  r(ddml_x_5_b)
     ddml_x_4_se:  r(ddml_x_4_se)
      ddml_x_4_b:  r(ddml_x_4_b)
     ddml_x_3_se:  r(ddml_x_3_se)
      ddml_x_3_b:  r(ddml_x_3_b)
     ddml_x_2_se:  r(ddml_x_2_se)
      ddml_x_2_b:  r(ddml_x_2_b)
     ddml_x_1_se:  r(ddml_x_1_se)
      ddml_x_1_b:  r(ddml_x_1_b)
ddml_ps_single~e:  r(ddml_ps_singlebest_se)
ddml_ps_single~b:  r(ddml_ps_singlebest_b)
ddml_ss_single~e:  r(ddml_ss_singlebest_se)
ddml_ss_single~b:  r(ddml_ss_singlebest_b)
ddml_st_single~e:  r(ddml_st_singlebest_se)
ddml_st_single~b:  r(ddml_st_singlebest_b)
ddml_ps_nnls1_se:  r(ddml_ps_nnls1_se)
 ddml_ps_nnls1_b:  r(ddml_ps_nnls1_b)
ddml_ss_nnls1_se:  r(ddml_ss_nnls1_se)
 ddml_ss_nnls1_b:  r(ddml_ss_nnls1_b)
ddml_st_nnls1_se:  r(ddml_st_nnls1_se)
 ddml_st_nnls1_b:  r(ddml_st_nnls1_b)

Simulations (10)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..........
(note: file out/out_5534_1000_4_5_10.dta not found)
file out/out_5534_1000_4_5_10.dta saved

. timer off 90

. timer list
   1: 130656.27 /      100 =    1306.5627
   4:      2.10 /      100 =       0.0210
   5:     15.83 /      100 =       0.1583
  51:   3649.37 /      100 =      36.4937
  52:     93.73 /      100 =       0.9373
  90: 134628.75 /        1 =  134628.7480

. 
. cap log close
